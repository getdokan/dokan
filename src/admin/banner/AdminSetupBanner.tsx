import { Button } from '@getdokan/dokan-ui';
import { useEffect, useState } from '@wordpress/element';
import getSettings from '../dashboard/settings/getSettings';
import { Step } from '../dashboard/pages/setup-guide';

const AdminSetupBanner = () => {
    const [ steps, setSteps ] = useState< Step[] >( [] );

    useEffect( () => {
        const allSteps: Step[] = getSettings( 'setup' ).steps;
        console.log( 'allSteps', allSteps );
        setSteps( allSteps );
    }, [] );

    const totalSteps = steps.length;
    const completedSteps = steps.filter( ( step ) => step.is_completed ).length;
    const stepProgress = ( completedSteps / totalSteps ) * 100;
    const isNoStepsCompleted = completedSteps === 0;
    const setupGuideUrl = dokanSetupGuideBanner?.setup_guide_url;
    return (
        <div className="bg-white rounded-lg shadow-md p-6 my-4 mb-6 mr-[20px]">
            <div className="flex items-center flex-wrap justify-between">
                <div className="flex items-center flex-wrap gap-6">
                    <div className="bg-primary-600 w-18 h-18 rounded-full p-3">
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="52"
                            height="53"
                            viewBox="0 0 52 53"
                            fill="none"
                        >
                            <path
                                d="M26.3143 31.9222C29.2167 31.9222 31.5697 29.5693 31.5697 26.6668C31.5697 23.7643 29.2167 21.4114 26.3143 21.4114C23.4118 21.4114 21.0588 23.7643 21.0588 26.6668C21.0588 29.5693 23.4118 31.9222 26.3143 31.9222Z"
                                stroke="white"
                                strokeWidth="3.50361"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                            />
                            <path
                                d="M39.2777 31.9222C39.0445 32.4506 38.9749 33.0367 39.0779 33.605C39.181 34.1733 39.4519 34.6977 39.8557 35.1105L39.9609 35.2156C40.2866 35.541 40.545 35.9274 40.7213 36.3528C40.8977 36.7781 40.9884 37.234 40.9884 37.6944C40.9884 38.1549 40.8977 38.6108 40.7213 39.0361C40.545 39.4615 40.2866 39.8479 39.9609 40.1733C39.6355 40.499 39.2491 40.7574 38.8237 40.9337C38.3984 41.1101 37.9425 41.2008 37.4821 41.2008C37.0216 41.2008 36.5657 41.1101 36.1404 40.9337C35.715 40.7574 35.3286 40.499 35.0032 40.1733L34.8981 40.0681C34.4853 39.6643 33.9609 39.3934 33.3926 39.2903C32.8243 39.1873 32.2382 39.2569 31.7099 39.49C31.1917 39.7121 30.7498 40.0808 30.4386 40.5508C30.1273 41.0208 29.9603 41.5716 29.958 42.1353V42.4331C29.958 43.3623 29.5889 44.2535 28.9319 44.9105C28.2748 45.5676 27.3837 45.9367 26.4544 45.9367C25.5252 45.9367 24.6341 45.5676 23.977 44.9105C23.32 44.2535 22.9508 43.3623 22.9508 42.4331V42.2754C22.9373 41.6956 22.7496 41.1332 22.4122 40.6615C22.0748 40.1897 21.6032 39.8304 21.0589 39.6302C20.5305 39.397 19.9444 39.3274 19.3761 39.4305C18.8078 39.5335 18.2835 39.8044 17.8706 40.2083L17.7655 40.3134C17.4401 40.6392 17.0537 40.8976 16.6284 41.0739C16.203 41.2502 15.7471 41.341 15.2867 41.341C14.8262 41.341 14.3703 41.2502 13.945 41.0739C13.5197 40.8976 13.1333 40.6392 12.8079 40.3134C12.4821 39.988 12.2237 39.6016 12.0474 39.1763C11.8711 38.7509 11.7803 38.295 11.7803 37.8346C11.7803 37.3742 11.8711 36.9182 12.0474 36.4929C12.2237 36.0676 12.4821 35.6812 12.8079 35.3558L12.913 35.2507C13.3168 34.8378 13.5878 34.3134 13.6908 33.7452C13.7938 33.1769 13.7243 32.5908 13.4911 32.0624C13.269 31.5443 12.9003 31.1024 12.4303 30.7911C11.9603 30.4799 11.4096 30.3128 10.8459 30.3106H10.548C9.61883 30.3106 8.72767 29.9415 8.07062 29.2844C7.41356 28.6273 7.04443 27.7362 7.04443 26.807C7.04443 25.8778 7.41356 24.9866 8.07062 24.3296C8.72767 23.6725 9.61883 23.3034 10.548 23.3034H10.7057C11.2855 23.2898 11.8479 23.1021 12.3196 22.7647C12.7914 22.4273 13.1507 21.9558 13.3509 21.4114C13.5841 20.883 13.6537 20.2969 13.5506 19.7287C13.4476 19.1604 13.1767 18.636 12.7728 18.2231L12.6677 18.118C12.342 17.7926 12.0836 17.4062 11.9072 16.9809C11.7309 16.5556 11.6402 16.0996 11.6402 15.6392C11.6402 15.1788 11.7309 14.7229 11.9072 14.2975C12.0836 13.8722 12.342 13.4858 12.6677 13.1604C12.9931 12.8347 13.3795 12.5762 13.8049 12.3999C14.2302 12.2236 14.6861 12.1329 15.1465 12.1329C15.607 12.1329 16.0629 12.2236 16.4882 12.3999C16.9135 12.5762 17.2999 12.8347 17.6253 13.1604L17.7304 13.2655C18.1433 13.6694 18.6677 13.9403 19.236 14.0433C19.8042 14.1464 20.3904 14.0768 20.9187 13.8436H21.0589C21.577 13.6216 22.0189 13.2528 22.3301 12.7828C22.6414 12.3128 22.8084 11.7621 22.8107 11.1984V10.9006C22.8107 9.97137 23.1798 9.08021 23.8369 8.42316C24.4939 7.7661 25.3851 7.39697 26.3143 7.39697C27.2435 7.39697 28.1347 7.7661 28.7917 8.42316C29.4488 9.08021 29.8179 9.97137 29.8179 10.9006V11.0582C29.8202 11.622 29.9872 12.1727 30.2984 12.6427C30.6097 13.1127 31.0516 13.4814 31.5697 13.7035C32.0981 13.9367 32.6842 14.0062 33.2525 13.9032C33.8208 13.8001 34.3451 13.5292 34.758 13.1254L34.8631 13.0203C35.1885 12.6945 35.5749 12.4361 36.0002 12.2598C36.4256 12.0835 36.8815 11.9927 37.3419 11.9927C37.8023 11.9927 38.2583 12.0835 38.6836 12.2598C39.1089 12.4361 39.4953 12.6945 39.8207 13.0203C40.1465 13.3457 40.4049 13.7321 40.5812 14.1574C40.7575 14.5827 40.8483 15.0386 40.8483 15.4991C40.8483 15.9595 40.7575 16.4154 40.5812 16.8407C40.4049 17.2661 40.1465 17.6525 39.8207 17.9779L39.7156 18.083C39.3117 18.4958 39.0408 19.0202 38.9378 19.5885C38.8348 20.1568 38.9043 20.7429 39.1375 21.2713V21.4114C39.3596 21.9295 39.7283 22.3714 40.1983 22.6827C40.6683 22.9939 41.219 23.161 41.7827 23.1632H42.0805C43.0098 23.1632 43.9009 23.5324 44.558 24.1894C45.215 24.8465 45.5842 25.7376 45.5842 26.6668C45.5842 27.596 45.215 28.4872 44.558 29.1443C43.9009 29.8013 43.0098 30.1704 42.0805 30.1704H41.9229C41.3592 30.1727 40.8084 30.3397 40.3384 30.651C39.8684 30.9622 39.4997 31.4041 39.2777 31.9222V31.9222Z"
                                stroke="white"
                                strokeWidth="3.50361"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                            />
                        </svg>
                    </div>
                    <div>
                        <div className="rounded-md  mb-2">
                            <h2 className="text-lg max-w-64 font-semibold text-gray-900">
                                Complete Your Marketplace Setup in minutes
                            </h2>
                        </div>
                        <div className="flex gap-4 items-center">
                            <div className="w-40 bg-gray-200 rounded-full h-3">
                                <div
                                    className="bg-primary-600 h-3 rounded-full"
                                    style={ { width: `${ stepProgress }%` } }
                                ></div>
                            </div>
                            <div className="text-xs text-gray-600 text-right mt-1">
                                { `${ completedSteps } / ${ totalSteps } ` }
                            </div>
                        </div>
                    </div>
                </div>
                <Button
                    onClick={ () => {
                        if ( setupGuideUrl ) {
                            window.location.href = setupGuideUrl;
                        }
                    } }
                    color="primary"
                    className="text-white text-sm font-medium py-3 px-6 rounded-md"
                >
                    { isNoStepsCompleted ? 'Start Setup' : 'Continue Setup' }
                </Button>
            </div>
        </div>
    );
};

export default AdminSetupBanner;

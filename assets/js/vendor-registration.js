/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/src/js/vendor-registration.js":
/*!**********************************************!*\
  !*** ./assets/src/js/vendor-registration.js ***!
  \**********************************************/
/***/ (() => {

eval("(function ($) {\n  var Dokan_Vendor_Registration = {\n    init: function () {\n      var form = $('form.register');\n\n      // bind events\n      $('.user-role input[type=radio]', form).on('change', this.showSellerForm);\n      $(document).on('dokan_event_seller_registration_form', this.showSellerForm);\n      $('.tc_check_box', form).on('click', this.onTOC);\n      $('#shop-phone', form).on('keydown', dokan_sanitize_phone_number);\n      $('#company-name', form).on('focusout', this.generateSlugFromCompany);\n      $('#seller-url', form).on('keydown', this.constrainSlug);\n      $('#seller-url', form).on('keyup', this.renderUrl);\n      $('#seller-url', form).on('focusout', this.checkSlugAvailability);\n      this.validationLocalized();\n      this.handlePasswordStrengthObserver();\n      // this.validate(this);\n      $(document).trigger('dokan_event_seller_registration_form');\n    },\n    validate: function (self) {\n      $('form.register').validate({\n        errorPlacement: function (error, element) {\n          var form_group = $(element).closest('.form-group');\n          form_group.addClass('has-error').append(error);\n        },\n        success: function (label, element) {\n          $(element).closest('.form-group').removeClass('has-error');\n        },\n        submitHandler: function (form) {\n          form.submit();\n        }\n      });\n    },\n    showSellerForm: function () {\n      let value = $(this).val();\n      if (value.length === 0) {\n        value = dokanRegistrationI18n.defaultRole;\n      }\n      if (value === 'seller') {\n        $('.show_if_seller').find('input, select').prop('disabled', false);\n        $('.show_if_seller').slideDown();\n        if ($('.tc_check_box').length > 0) {\n          $('button[name=register]').prop('disabled', true);\n        }\n        $('.user-role .dokan-role-seller').prop(\"checked\", true);\n      } else {\n        $('.show_if_seller').find('input, select').prop('disabled', true);\n        $('.show_if_seller').slideUp();\n        if ($('.tc_check_box').length > 0) {\n          $('button[name=register]').prop('disabled', false);\n        }\n        $('.user-role .dokan-role-customer').prop(\"checked\", true);\n      }\n    },\n    onTOC: function () {\n      var chk_value = $(this).val();\n      if ($(this).prop(\"checked\")) {\n        $('input[name=register]').removeAttr('disabled');\n        $('button[name=register]').removeAttr('disabled');\n        $('input[name=dokan_migration]').removeAttr('disabled');\n      } else {\n        $('input[name=register]').attr('disabled', 'disabled');\n        $('button[name=register]').attr('disabled', 'disabled');\n        $('input[name=dokan_migration]').attr('disabled', 'disabled');\n      }\n    },\n    generateSlugFromCompany: function () {\n      var value = getSlug($(this).val());\n      $('#seller-url').val(value);\n      $('#url-alart').text(value);\n      $('#seller-url').focus();\n    },\n    constrainSlug: function (e) {\n      var text = $(this).val();\n\n      // Allow: backspace, delete, tab, escape, enter and .\n      if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 91, 109, 110, 173, 189, 190]) !== -1 ||\n      // Allow: Ctrl+A\n      e.keyCode == 65 && e.ctrlKey === true ||\n      // Allow: home, end, left, right\n      e.keyCode >= 35 && e.keyCode <= 39) {\n        // let it happen, don't do anything\n        return;\n      }\n      if ((e.shiftKey || (e.keyCode < 65 || e.keyCode > 90) && (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\n        e.preventDefault();\n      }\n    },\n    checkSlugAvailability: function () {\n      var self = $(this),\n        data = {\n          action: 'shop_url',\n          url_slug: self.val(),\n          _nonce: dokan.nonce\n        };\n      if (self.val() === '') {\n        return;\n      }\n      var row = self.closest('.form-row');\n      row.block({\n        message: null,\n        overlayCSS: {\n          background: '#fff url(' + dokan.ajax_loader + ') no-repeat center',\n          opacity: 0.6\n        }\n      });\n      $.post(dokan.ajaxurl, data, function (resp) {\n        if (resp.success === true) {\n          $('#url-alart').removeClass('text-danger').addClass('text-success');\n          $('#url-alart-mgs').removeClass('text-danger').addClass('text-success').text(dokan.seller.available);\n          $('.woocommerce-form-register__submit').prop('disabled', false);\n        } else {\n          $('#url-alart').removeClass('text-success').addClass('text-danger');\n          $('#url-alart-mgs').removeClass('text-success').addClass('text-danger').text(dokan.seller.notAvailable);\n          $('.woocommerce-form-register__submit').prop('disabled', true);\n        }\n        row.unblock();\n      });\n    },\n    renderUrl: function () {\n      $('#url-alart').text($(this).val());\n    },\n    validationLocalized: function () {\n      var dokan_messages = DokanValidateMsg;\n      dokan_messages.maxlength = $.validator.format(dokan_messages.maxlength_msg);\n      dokan_messages.minlength = $.validator.format(dokan_messages.minlength_msg);\n      dokan_messages.rangelength = $.validator.format(dokan_messages.rangelength_msg);\n      dokan_messages.range = $.validator.format(dokan_messages.range_msg);\n      dokan_messages.max = $.validator.format(dokan_messages.max_msg);\n      dokan_messages.min = $.validator.format(dokan_messages.min_msg);\n      $.validator.messages = dokan_messages;\n    },\n    handlePasswordStrengthObserver: function () {\n      // Identify the password input element to observe.\n      const elementToObserve = document.querySelector('.woocommerce-form-register .password-input'),\n        AllowedClassNames = ['good', 'strong'];\n\n      // If registration password input field is not exists.\n      if (!elementToObserve) {\n        return;\n      }\n\n      // Create a new instance of `MutationObserver` named `observer`.\n      const observer = new MutationObserver((mutationList, observer) => {\n        for (const mutation of mutationList) {\n          // Check if the mutation element class list contains at least an allowed class names.\n          if (AllowedClassNames.some(className => mutation.target.classList.contains(className))) {\n            this.ensureShopSlugAvailability();\n          }\n        }\n      });\n\n      // Call `observe()` on that MutationObserver instance.\n      observer.observe(elementToObserve, {\n        subtree: true,\n        childList: true\n      });\n    },\n    ensureShopSlugAvailability: function () {\n      const slugAvailabilityStatus = $('#url-alart-mgs').hasClass('text-success'),\n        registrationRoleInput = $('.vendor-customer-registration input[name=\"role\"]:checked'),\n        submitButton = $('.woocommerce-form-register__submit');\n\n      // Check if the registration role is `seller`.\n      if ('seller' !== registrationRoleInput.val()) {\n        return;\n      }\n\n      // Enable/disable submit button based on shop slug availability.\n      if (slugAvailabilityStatus) {\n        submitButton.prop('disabled', false);\n      } else {\n        submitButton.prop('disabled', true);\n      }\n    }\n  };\n\n  // boot the class onReady\n  $(function () {\n    window.Dokan_Vendor_Registration = Dokan_Vendor_Registration;\n    window.Dokan_Vendor_Registration.init();\n\n    // trigger change if there is an error while registering\n    var shouldTrigger = $('.woocommerce ul').hasClass('woocommerce-error') && !$('.show_if_seller').is(':hidden');\n    if (shouldTrigger) {\n      var form = $('form.register');\n      $('.user-role input[type=radio]', form).trigger('change');\n    }\n\n    // disable migration button if checkbox isn't checked\n    if ($('.tc_check_box').length > 0) {\n      $('input[name=dokan_migration]').attr('disabled', 'disabled');\n      $('input[name=register]').attr('disabled', 'disabled');\n    }\n  });\n})(jQuery);\n\n//# sourceURL=webpack://dokan/./assets/src/js/vendor-registration.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./assets/src/js/vendor-registration.js"]();
/******/ 	
/******/ })()
;
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/src/js/product-category-ui.js":
/*!**********************************************!*\
  !*** ./assets/src/js/product-category-ui.js ***!
  \**********************************************/
/***/ (() => {

eval(";\n(function ($) {\n  let modal = $('#dokan-product-category-modal');\n  let searchResultContainer = $('#dokan-cat-search-res');\n  let searchResUl = $('#dokan-cat-search-res-ul');\n  let rightIndicator = $('.dokan-single-categories-right');\n  let leftIndicator = $('.dokan-single-categories-left');\n  let categoriesState = [];\n  let searchResultState = [];\n  let inputHolder = '';\n  let selectedFrom = 0;\n  let selectedCatId = '';\n  var ProductCategory = {\n    init() {\n      $('body').on('click', '.dokan-product-category-li', this.categoryLiClick);\n      $('body').on('click', '.dokan-cat-search-res-li', this.clickSearchResLi);\n      $('body').on('keyup', '#dokan-single-cat-search-input', ProductCategory.debounce(this.typeToSearch, 500));\n      $('body').on('scroll', '#dokan-single-categories', this.categoryScroll);\n      $('body').on('click', '.dokan-single-categories-right-box', ProductCategory.indicatorScrollTo);\n      $('body').on('click', '.dokan-single-categories-left-box', function () {\n        ProductCategory.indicatorScrollTo(false);\n      });\n      $('body').on('click', '.dokan-single-cat-select-btn', ProductCategory.chooseCatButton);\n      $('body').on('click', '.dokan-category-open-modal', ProductCategory.initModal);\n      $('body').on('click', '#dokan-category-close-modal', ProductCategory.hideCategoryModal);\n      $('body').on('click', '.dokan-single-cat-add-btn', ProductCategory.addANewCatBox);\n      $('body').on('click', '.dokan-select-product-category-remove-container', ProductCategory.removeCatBox);\n    },\n    initModal() {\n      inputHolder = $(this).data('dokansclevel');\n      selectedFrom = $(this).data('selectfor');\n      let chosenCat = $(this).siblings(\".dokan-cat-inputs-holder\").find(\".dokan_chosen_product_cat\");\n      $(this).parent().attr('data-activate', 'yes');\n      ProductCategory.openModal(chosenCat);\n    },\n    removeCatBox() {\n      $(this).closest('.dokan-select-product-category-container')[0].remove();\n    },\n    categoryLiClick() {\n      let {\n        catlevel,\n        termId,\n        name,\n        haschild\n      } = $(this).data();\n      selectedCatId = termId;\n      ProductCategory.removeAfterClickedUls(catlevel, termId);\n      ProductCategory.loadChildCategories(catlevel, termId, name, haschild);\n    },\n    clickSearchResLi() {\n      let {\n        termid,\n        index,\n        name\n      } = $(this).data();\n      if (termid) {\n        selectedCatId = termid;\n        ProductCategory.setCatUiBasedOnOneCat(termid, searchResultState[index]);\n      }\n    },\n    typeToSearch() {\n      let inputText = $(this).val();\n      $('#dokan-cat-search-text-limit').html(inputText.length);\n      if (inputText.length > 0) {\n        ProductCategory.hideSearchResults(false);\n        ProductCategory.doSearchCates(inputText);\n      } else {\n        ProductCategory.hideSearchResults();\n      }\n    },\n    categoryScroll() {\n      let totalScrollable = $('#dokan-single-categories').get(0).scrollWidth - $('#dokan-single-categories').innerWidth();\n      let left = $(this).scrollLeft();\n      let right = totalScrollable - left;\n      ProductCategory.showIndicators(leftIndicator, left);\n      ProductCategory.showIndicators(rightIndicator, right);\n    },\n    chooseCatButton() {\n      let category_box = `.dokan-select-product-category-container.dokan_select_cat_for_${selectedFrom}_${inputHolder}[data-activate='yes']`;\n      let cat_exists_in_list = $(category_box).parent().children('.dokan-select-product-category-container').children('.dokan-cat-inputs-holder').find(`.dokan_chosen_product_cat_${selectedCatId}`).length;\n      if (cat_exists_in_list) {\n        dokan_sweetalert(dokan_product_category_data.i18n.duplicate_category, {\n          icon: 'warning'\n        });\n        return;\n      }\n      ProductCategory.setCatName(ProductCategory.getSelectedLabel(), $(category_box));\n      ProductCategory.setCatId(selectedCatId, $(category_box));\n      ProductCategory.hideCategoryModal();\n\n      // Any one can use this hook and do anything after any category is selected.\n      wp.hooks.doAction('dokan_selected_multistep_category', selectedCatId);\n      $(category_box).attr('data-activate', 'no');\n    },\n    setCatUiBasedOnOneCat: function (catId, category) {\n      let disable = undefined !== category.children.length && category.children.length > 0;\n      ProductCategory.disableDoneBtn(disable);\n      let allUl = [...category.parents];\n      let selectedInUls = [...category.parents];\n      allUl.unshift(0);\n      selectedInUls.push(Number(catId));\n      let UL = allUl.map((id, index) => {\n        return ProductCategory.getCategoriesWithParentId(id, index + 1, selectedInUls[index]);\n      });\n      categoriesState = UL;\n      ProductCategory.updateCategoryUi();\n      ProductCategory.hideSearchResults();\n      ProductCategory.scrollTo(UL.length);\n    },\n    async doSearchCates(text) {\n      let searchResult = [];\n      for (const key in dokan_product_category_data.categories) {\n        let category = dokan_product_category_data.categories[key];\n        let fullText = category.name;\n        text = text.toLowerCase();\n        let found = fullText.toLowerCase().indexOf(text);\n        if (found >= 0) {\n          searchResult.push(category);\n        }\n      }\n      searchResultState = searchResult;\n      ProductCategory.updateSearchResultUi();\n    },\n    hideSearchResults(status = true) {\n      status ? searchResultContainer.addClass('dokan-hide') : searchResultContainer.removeClass('dokan-hide');\n    },\n    showIndicators(element, scrolled) {\n      scrolled > 5 ? element.removeClass('dokan-hide') : element.addClass('dokan-hide');\n    },\n    showCategoryModal() {\n      selectedCatId = '';\n      ProductCategory.disableDoneBtn();\n      modal.css('display', 'flex');\n      ProductCategory.hideSearchResults();\n      $('#dokan-single-cat-search-input').val('');\n      categoriesState = [];\n      ProductCategory.loadAllParentCategories();\n    },\n    disableDoneBtn(disable = true) {\n      $('.dokan-single-cat-select-btn').prop('disabled', disable);\n    },\n    hideCategoryModal() {\n      modal.css('display', 'none');\n      $('.dokan-select-product-category-container').attr('data-activate', 'no');\n    },\n    loadAllParentCategories() {\n      categoriesState.push(ProductCategory.getCategoriesWithParentId());\n      ProductCategory.updateCategoryUi();\n    },\n    getCategoriesWithParentId(parentId = 0, level = 1, selectedId = false) {\n      let returnableCategories = [];\n      for (const key in dokan_product_category_data.categories) {\n        let currentCategory = dokan_product_category_data.categories[key];\n        if (currentCategory.parent_id == parentId) {\n          currentCategory.uiActivaion = Number(currentCategory.term_id) === selectedId ? 'dokan-product-category-li-active' : false;\n          returnableCategories.push(currentCategory);\n        }\n      }\n\n      // sort categories by name\n      returnableCategories.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : b.name.toLowerCase() > a.name.toLowerCase() ? -1 : 0);\n      return {\n        categories: returnableCategories,\n        level: level,\n        term_id: parentId\n      };\n    },\n    loadChildCategories(catlevel, termId, name, haschild) {\n      /**\n       * If enabled any one middle category in dokan product multi-step category selection.\n       */\n      const middleCategorySelection = dokan_product_category_data.any_category_selection;\n\n      // If selected category has no child OR middle category selection is true then enable the category select done button else disable.\n      if (!haschild || true === Boolean(middleCategorySelection)) {\n        ProductCategory.disableDoneBtn(false);\n      } else {\n        ProductCategory.disableDoneBtn();\n      }\n\n      // If the selected category has more children category then show them.\n      if (haschild) {\n        let categories = ProductCategory.getCategoriesWithParentId(termId, catlevel + 1);\n        categoriesState.push(categories);\n        ProductCategory.updateCategoryUi();\n        ProductCategory.scrollTo(catlevel);\n      }\n    },\n    updateSearchResultUi() {\n      let html = '';\n      html = searchResultState.map((element, index) => {\n        return `<li data-name=\"${element.name}\" data-termid=\"${element.term_id}\" data-index=\"${index}\" class=\"dokan-cat-search-res-li\">\n                        <div class=\"dokan-cat-search-res-item\">\n                            ${element.name}\n                        </div>\n                        <div class=\"dokan-cat-search-res-history\">\n                            ${ProductCategory.getSearchedParentHistory(element.parents, element.name)}\n                        </div>\n                    </li>`;\n      });\n      if (0 == searchResultState.length) {\n        html = `<li data-name=\"\" data-termid=\"\" data-index=\"\" class=\"dokan-cat-search-res-li\">\n                        <div class=\"dokan-cat-search-res-item\">\n                            ${window.dokan.i18n_no_result_found}\n                        </div>\n                        <div class=\"dokan-cat-search-res-history\">\n                        </div>\n                    </li>`;\n      }\n      searchResUl.html(html);\n    },\n    getSearchedParentHistory(parents, searched) {\n      let html = \"\";\n      html = parents.map((parentId, index) => {\n        return `<span class=\"dokan-cat-search-res-suggestion\">${ProductCategory.findCategory(parentId).name}</span>\n                    <span class=\"dokan-cat-search-res-indicator\"><i class=\"fas fa-caret-right\"></i></span>`;\n      }).join('');\n      html += `<span class=\"dokan-cat-search-res-suggestion-selected\">${ProductCategory.highlight(searched)}</span>`;\n      return html;\n    },\n    highlight(fullText) {\n      let text = $('#dokan-single-cat-search-input').val().toLowerCase();\n      let index = fullText.toLowerCase().indexOf(text);\n      if (index >= 0) {\n        return `<span>${fullText.substring(0, index)}</span>\n                    <span class='dokan-cat-highlight'>${fullText.substring(index, index + text.length)}</span>\n                    <span>${fullText.substring(index + text.length)}</span>`;\n      }\n    },\n    updateCategoryUi() {\n      let html = ProductCategory.getCatUlHtml();\n      $('#dokan-single-categories').html(html);\n      ProductCategory.updateSelectedLabel();\n      ProductCategory.adjustCategoryPosition();\n    },\n    updateSelectedLabel() {\n      $('#dokan-selected-category-span').html(ProductCategory.getSelectedLabel());\n    },\n    adjustCategoryPosition() {\n      $.each($('.dokan-product-category-ul').find('.dokan-product-category-li-active'), function (index, item) {\n        let {\n          catlevel,\n          indexli\n        } = $(item).data();\n        $(`#${catlevel}-level-cat-ul`).scrollTop(36.38 * indexli);\n      });\n    },\n    getSelectedLabel() {\n      let activatedLi = $('.dokan-product-category-li-active');\n      let liLength = activatedLi.length;\n      let ui = '';\n      activatedLi.each((index, obj) => {\n        var allDataSets = obj.dataset;\n        ui += `<span class=\"dokan-selected-category-product ${liLength == index + 1 ? 'dokan-cat-selected' : ''}\">${allDataSets.name}</span>\n                ${liLength != index + 1 ? '<span class=\"dokan-selected-category-icon\"><i class=\"fas fa-chevron-right\"></i></span>' : ''}`;\n      });\n      return ui;\n    },\n    updateCategorySelection(catlevel, termId) {\n      let expectedLi = categoriesState[catlevel - 1];\n      let updatedLi = expectedLi.categories.map(element => {\n        element.term_id == termId ? element.uiActivaion = 'dokan-product-category-li-active' : element.uiActivaion = '';\n        return element;\n      });\n      categoriesState[catlevel - 1].categories = updatedLi;\n      ProductCategory.updateCategoryUi();\n    },\n    getCatUlHtml() {\n      let html = categoriesState.map((element, index) => {\n        let li = ProductCategory.getCatLiHtml(element.categories, element.level);\n        return `<ul id=\"${element.level}-level-cat-ul\" class=\"dokan-product-category-ul ${element.level}-level-cat\" data-level=\"${element.level}\">${li}</ul>`;\n      });\n      return html;\n    },\n    getCatLiHtml(element, level) {\n      let html = '';\n      element.forEach((category, index) => {\n        html += `<li data-indexli=\"${index}\" data-haschild=\"${category.children.length > 0}\" data-name=\"${category.name}\" data-catLevel=\"${level}\" class=\"${category.uiActivaion ? category.uiActivaion : ''} dokan-product-category-li ${category.children.length > 0 ? 'dokan-cat-has-child' : ''}\" data-term-id=\"${category.term_id}\" data-taxonomy=\"product_cat\">\n                        <span class=\"dokan-product-category\">${category.name}</span>\n                        <span class=\"dokan-product-category-icon\"><i class=\"fas fa-chevron-right\"></i></span>\n                    </li>`;\n      });\n      return html;\n    },\n    removeAfterClickedUls(catlevel, termId) {\n      let newCategories = categoriesState.filter(data => {\n        if (data.level <= catlevel) {\n          return data;\n        }\n      });\n      categoriesState = newCategories;\n      ProductCategory.updateCategorySelection(catlevel, termId);\n    },\n    scrollTo(to = 0) {\n      $('#dokan-single-categories').animate({\n        scrollLeft: 300 * to\n      }, 800);\n    },\n    indicatorScrollTo(left = true) {\n      $('#dokan-single-categories').animate({\n        scrollLeft: `${left ? '+' : '-'}=350px`\n      }, 800);\n    },\n    setCatId(id, category_box) {\n      let ui = `<input data-field-name=\"chosen_product_cat\" type=\"hidden\" class=\"dokan_chosen_product_cat dokan_chosen_product_cat_${id}\" name=\"chosen_product_cat[]\" value=\"${id}\"></input>`;\n      ui += `<input type=\"hidden\" name=\"chosen_product_cat_bulk[]\" value=\"${id}\"></input>`;\n      category_box.children(`.dokan-cih-level-${inputHolder}`).html(ui);\n    },\n    setCatName(name, category_box) {\n      category_box.children('.dokan-select-product-category').children(`.dokan-ssct-level-${inputHolder}`).html(name);\n    },\n    addANewCatBox() {\n      let addCatBtn = $(this)[0];\n      let from = $(addCatBtn).data('selectfor');\n      selectedFrom = from;\n      let lastCatElement = $(this).parent().siblings('.dokan-add-new-cat-box').children('.dokan-select-product-category-container').length;\n      let lastCat = $(this).parent().siblings('.dokan-add-new-cat-box').children('.dokan-select-product-category-container')[lastCatElement - 1];\n      let boxCounter = $(lastCat).find('#dokan-category-open-modal').data('dokansclevel') + 1;\n      if (isNaN(boxCounter)) {\n        boxCounter = 0;\n      }\n      let html = `\n                <div data-activate=\"no\" class=\"dokan-select-product-category-container dokan_select_cat_for_${from}_${boxCounter}\">\n                    <div class=\"dokan-form-group dokan-select-product-category dokan-category-open-modal\" data-dokansclevel=\"${boxCounter}\" id=\"dokan-category-open-modal\" data-selectfor=\"${from}\">\n                        <span id=\"dokan_product_cat_res\" class=\"dokan-select-product-category-title dokan-ssct-level-${boxCounter}\">- ${dokan_product_category_data.i18n.select_a_category} -</span>\n                        <span class=\"dokan-select-product-category-icon\"><i class=\"fas fa-edit\"></i></span>\n                    </div>\n                        ${!dokan_product_category_data.is_single ? `\n                        <div class=\"dokan-select-product-category-remove-container\">\n                            <span class=\"dokan-select-product-category-remove\"><i class=\"fas fa-times\"></i></span>\n                        </div>` : ''}\n                    <span class=\"dokan-cat-inputs-holder dokan-cih-level-${boxCounter}\" ></span>\n                </div>\n                `;\n      $(this).parent().parent().children(`.cat_box_for_${from}`).append(html);\n    },\n    findCategory(id) {\n      return dokan_product_category_data.categories[id];\n    },\n    debounce(func, wait, immediate) {\n      var timeout;\n      return function () {\n        var context = this,\n          args = arguments;\n        var later = function () {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    },\n    openModal(chosenCat) {\n      ProductCategory.showCategoryModal();\n      if (chosenCat.length > 0) {\n        let catId = chosenCat.val();\n        selectedCatId = catId;\n        let category = dokan_product_category_data.categories[catId];\n        ProductCategory.setCatUiBasedOnOneCat(catId, category);\n      }\n    }\n  };\n\n  // On DOM ready.\n  $(document).ready(function () {\n    ProductCategory.init();\n  });\n})(jQuery);\n\n//# sourceURL=webpack://dokan/./assets/src/js/product-category-ui.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./assets/src/js/product-category-ui.js"]();
/******/ 	
/******/ })()
;
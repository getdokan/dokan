/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/src/js/dokan-daterangepicker.js":
/*!************************************************!*\
  !*** ./assets/src/js/dokan-daterangepicker.js ***!
  \************************************************/
/***/ (() => {

eval(";\n(function ($) {\n  var DokanDateRangePicker = {\n    init: function () {\n      // Set date range data.\n      let localeData = {\n        format: dokan_get_daterange_picker_format(),\n        ...dokan_helper.daterange_picker_local\n      };\n\n      // Date range picker handler.\n      $(\".dokan-daterangepicker\").daterangepicker({\n        autoUpdateInput: false,\n        showDropdowns: true,\n        locale: localeData\n      });\n\n      // Set the value for date range field to show frontend.\n      $('.dokan-daterangepicker').on('apply.daterangepicker', function (ev, picker) {\n        $(this).val(picker.startDate.format(localeData.format) + ' - ' + picker.endDate.format(localeData.format));\n        $(this).siblings('input.dokan-daterangepicker-start-date').val(picker.startDate.format('YYYY-MM-DD'));\n        $(this).siblings('input.dokan-daterangepicker-end-date').val(picker.endDate.format('YYYY-MM-DD'));\n      });\n\n      // Date range picker clear button handler\n      $('.dokan-daterangepicker').on('cancel.daterangepicker', function (ev, picker) {\n        // Clear date range input fields value on clicking clear button\n        if (!$(this).data('clear')) {\n          return;\n        }\n        $(this).val('');\n        $(this).siblings('input.dokan-daterangepicker-start-date').val('');\n        $(this).siblings('input.dokan-daterangepicker-end-date').val('');\n      });\n    }\n  };\n\n  // Let's invoke the init method\n  DokanDateRangePicker.init();\n})(jQuery);\n\n//# sourceURL=webpack://dokan/./assets/src/js/dokan-daterangepicker.js?");

/***/ }),

/***/ "./assets/src/js/orders.js":
/*!*********************************!*\
  !*** ./assets/src/js/orders.js ***!
  \*********************************/
/***/ (() => {

eval("jQuery(function ($) {\n  $('.tips').tooltip();\n  $('ul.order-status').on('click', 'a.dokan-edit-status', function (e) {\n    $(this).addClass('dokan-hide').closest('li').next('li').removeClass('dokan-hide');\n    return false;\n  });\n  $('ul.order-status').on('click', 'a.dokan-cancel-status', function (e) {\n    $(this).closest('li').addClass('dokan-hide').prev('li').find('a.dokan-edit-status').removeClass('dokan-hide');\n    return false;\n  });\n  $('form#dokan-order-status-form').on('submit', function (e) {\n    e.preventDefault();\n    var self = $(this),\n      li = self.closest('li');\n    li.block({\n      message: null,\n      overlayCSS: {\n        background: '#fff url(' + dokan.ajax_loader + ') no-repeat center',\n        opacity: 0.6\n      }\n    });\n    $.post(dokan.ajaxurl, self.serialize(), function (response) {\n      li.unblock();\n      if (response.success) {\n        var prev_li = li.prev();\n        li.addClass('dokan-hide');\n        prev_li.find('label').replaceWith(response.data);\n        prev_li.find('a.dokan-edit-status').removeClass('dokan-hide');\n      } else {\n        dokan_sweetalert(response.data, {\n          icon: 'success'\n        });\n      }\n    });\n  });\n  $('form#add-order-note').on('submit', function (e) {\n    e.preventDefault();\n    if (!$('textarea#add-note-content').val()) return;\n    $('#dokan-order-notes').block({\n      message: null,\n      overlayCSS: {\n        background: '#fff url(' + dokan.ajax_loader + ') no-repeat center',\n        opacity: 0.6\n      }\n    });\n    $.post(dokan.ajaxurl, $(this).serialize(), function (response) {\n      $('ul.order_notes').prepend(response);\n      $('#dokan-order-notes').unblock();\n      $('#add-note-content').val('');\n    });\n    return false;\n  });\n  $('#dokan-order-notes').on('click', 'a.delete_note', function () {\n    var note = $(this).closest('li.note');\n    $('#dokan-order-notes').block({\n      message: null,\n      overlayCSS: {\n        background: '#fff url(' + dokan.ajax_loader + ') no-repeat center',\n        opacity: 0.6\n      }\n    });\n    var data = {\n      action: 'dokan_delete_order_note',\n      note_id: $(note).attr('rel'),\n      security: $('#delete-note-security').val()\n    };\n    $.post(dokan.ajaxurl, data, function (response) {\n      $(note).remove();\n      $('#dokan-order-notes').unblock();\n    });\n    return false;\n  });\n  $('.order_download_permissions').on('click', 'button.grant_access', function () {\n    var self = $(this),\n      product = $('select.grant_access_id').val();\n    if (!product) return;\n    $('.order_download_permissions').block({\n      message: null,\n      overlayCSS: {\n        background: '#fff url(' + dokan.ajax_loader + ') no-repeat center',\n        opacity: 0.6\n      }\n    });\n    var data = {\n      action: 'dokan_grant_access_to_download',\n      product_ids: product,\n      loop: $('.order_download_permissions .panel').length,\n      order_id: self.data('order-id'),\n      security: self.data('nonce')\n    };\n    $.post(dokan.ajaxurl, data, function (response) {\n      if (response) {\n        $('#accordion').append(response);\n      } else {\n        dokan_sweetalert(dokan.i18n_download_access, {\n          icon: 'warning'\n        });\n      }\n      $('.datepicker').datepicker();\n      $('.order_download_permissions').unblock();\n    });\n    return false;\n  });\n  $('.order_download_permissions').on('click', 'button.revoke_access', async function (e) {\n    e.preventDefault();\n    const answer = await dokan_sweetalert(dokan.i18n_download_permission, {\n      action: 'confirm',\n      icon: 'warning'\n    });\n    if ('undefined' !== answer && answer.isConfirmed) {\n      var self = $(this),\n        el = self.closest('.dokan-panel');\n      var product = self.attr('rel').split(\",\")[0];\n      var file = self.attr('rel').split(\",\")[1];\n      if (product > 0) {\n        $(el).block({\n          message: null,\n          overlayCSS: {\n            background: '#fff url(' + dokan.ajax_loader + ') no-repeat center',\n            opacity: 0.6\n          }\n        });\n        var data = {\n          action: 'dokan_revoke_access_to_download',\n          product_id: product,\n          download_id: file,\n          order_id: self.data('order-id'),\n          permission_id: self.data('permission-id'),\n          security: self.data('nonce')\n        };\n        $.post(dokan.ajaxurl, data, function (response) {\n          // Success\n          $(el).fadeOut('300', function () {\n            $(el).remove();\n          });\n        });\n      } else {\n        $(el).fadeOut('300', function () {\n          $(el).remove();\n        });\n      }\n    }\n    return false;\n  });\n  $(\"#grant_access_id\").select2({\n    allowClear: true,\n    minimumInputLength: 3,\n    ajax: {\n      url: dokan.ajaxurl,\n      dataType: 'json',\n      delay: 500,\n      data: function (params) {\n        return {\n          q: params.term,\n          // search term\n          action: 'dokan_search_downloadable_products',\n          _nonce: dokan.search_downloadable_products_nonce,\n          page: params.page || 1\n        };\n      },\n      processResults: function (data) {\n        var options = [];\n        if (data) {\n          $.each(data, function (index, text) {\n            options.push({\n              id: index,\n              text: text\n            });\n          });\n        }\n        return {\n          results: options,\n          pagination: {\n            more: options.length == 0 ? false : true\n          }\n        };\n      },\n      cache: true\n    },\n    language: {\n      errorLoading: function () {\n        return dokan.i18n_searching;\n      },\n      inputTooLong: function (args) {\n        var overChars = args.input.length - args.maximum;\n        if (1 === overChars) {\n          return dokan.i18n_input_too_long_1;\n        }\n        return dokan.i18n_input_too_long_n.replace('%qty%', overChars);\n      },\n      inputTooShort: function (args) {\n        var remainingChars = args.minimum - args.input.length;\n        if (1 === remainingChars) {\n          return dokan.i18n_input_too_short_1;\n        }\n        return dokan.i18n_input_too_short_n.replace('%qty%', remainingChars);\n      },\n      loadingMore: function () {\n        return dokan.i18n_load_more;\n      },\n      maximumSelected: function (args) {\n        if (args.maximum === 1) {\n          return dokan.i18n_selection_too_long_1;\n        }\n        return dokan.i18n_selection_too_long_n.replace('%qty%', args.maximum);\n      },\n      noResults: function () {\n        return dokan.i18n_no_matches;\n      },\n      searching: function () {\n        return dokan.i18n_searching;\n      }\n    }\n  });\n});\n\n/*global woocommerce_admin_meta_boxes, woocommerce_admin, accounting */\n;\n(function ($) {\n  /**\n   * Order Items Panel\n   */\n  var dokan_seller_meta_boxes_order_items = {\n    init: function () {\n      let formatMap = {\n        // Day\n        d: 'dd',\n        D: 'D',\n        j: 'd',\n        l: 'DD',\n        // Month\n        F: 'MM',\n        m: 'mm',\n        M: 'M',\n        n: 'm',\n        // Year\n        o: 'yy',\n        // not exactly same. see php date doc for details\n        Y: 'yy',\n        y: 'y'\n      };\n      let i = 0;\n      let char = '';\n      let datepickerFormat = '';\n      for (i = 0; i < dokan.i18n_date_format.length; i++) {\n        char = dokan.i18n_date_format[i];\n        if (char in formatMap) {\n          datepickerFormat += formatMap[char];\n        } else {\n          datepickerFormat += char;\n        }\n      }\n      $(\"#shipped-date\").datepicker({\n        dateFormat: datepickerFormat\n      });\n\n      //saving note\n      $('body').on('click', '#dokan-add-tracking-number', this.showTrackingForm);\n      $('body').on('click', '#dokan-cancel-tracking-note', this.cancelTrackingForm);\n      $('body').on('click', '#add-tracking-details', this.insertShippingTrackingInfo);\n      $('#woocommerce-order-items').on('click', 'button.refund-items', this.refund_items).on('click', '.cancel-action', this.cancel)\n\n      // Refunds\n      .on('click', 'button.do-api-refund, button.do-manual-refund', this.refunds.do_refund).on('change', '.refund input.refund_line_total, .refund input.refund_line_tax', this.refunds.input_changed).on('change keyup', '.wc-order-refund-items #refund_amount', this.refunds.amount_changed).on('change', 'input.refund_order_item_qty', this.refunds.refund_quantity_changed)\n\n      // Subtotal/total\n      .on('keyup', '.woocommerce_order_items .split-input input:eq(0)', function () {\n        var $subtotal = $(this).next();\n        if ($subtotal.val() === '' || $subtotal.is('.match-total')) {\n          $subtotal.val($(this).val()).addClass('match-total');\n        }\n      }).on('keyup', '.woocommerce_order_items .split-input input:eq(1)', function () {\n        $(this).removeClass('match-total');\n      });\n    },\n    showTrackingForm: function (e) {\n      e.preventDefault();\n      var self = $(this);\n      self.closest('div').find('form#add-shipping-tracking-form').slideDown(300, function () {\n        $(this).removeClass('dokan-hide');\n      });\n    },\n    cancelTrackingForm: function (e) {\n      e.preventDefault();\n      var self = $(this);\n      self.closest('form#add-shipping-tracking-form').slideUp(300, function () {\n        $(this).addClass('dokan-hide');\n      });\n    },\n    insertShippingTrackingInfo: function (e) {\n      e.preventDefault();\n      var shipping_tracking_info = {\n        shipping_provider: $('#shipping_provider').val(),\n        shipping_number: $('#tracking_number').val(),\n        shipped_date: $('#shipped-date').val(),\n        action: $('#action').val(),\n        post_id: $('#post-id').val(),\n        security: $('#security').val()\n      };\n      $('#dokan-order-notes').block({\n        message: null,\n        overlayCSS: {\n          background: '#fff url(' + dokan.ajax_loader + ') no-repeat center',\n          opacity: 0.6\n        }\n      });\n      $.post(dokan.ajaxurl, shipping_tracking_info, function (response) {\n        $('ul.order_notes').prepend(response);\n        $('#dokan-order-notes').unblock();\n        $('form#add-shipping-tracking-form').find(\"input[type=text], textarea\").val(\"\");\n      });\n      return false;\n    },\n    block: function () {\n      $('#woocommerce-order-items').block({\n        message: null,\n        overlayCSS: {\n          background: '#fff',\n          opacity: 0.6\n        }\n      });\n    },\n    unblock: function () {\n      $('#woocommerce-order-items').unblock();\n    },\n    reload_items: function () {\n      var data = {\n        order_id: dokan_refund.post_id,\n        action: 'dokan_load_order_items',\n        security: dokan_refund.order_item_nonce\n      };\n      dokan_seller_meta_boxes_order_items.block();\n      $.ajax({\n        url: dokan_refund.ajax_url,\n        data: data,\n        type: 'POST',\n        success: function (response) {\n          $('.dokan-panel-default #woocommerce-order-items').empty();\n          $('.dokan-panel-default #woocommerce-order-items').append(response);\n          // wc_meta_boxes_order.init_tiptip();\n        }\n      });\n    },\n    refund_items: function () {\n      $('div.wc-order-refund-items').slideDown();\n      $('div.wc-order-bulk-actions').slideUp();\n      $('div.wc-order-totals-items').slideUp();\n      $('#woocommerce-order-items div.refund').show();\n      $('.wc-order-edit-line-item .wc-order-edit-line-item-actions').hide();\n      return false;\n    },\n    cancel: function () {\n      $(this).closest('div.wc-order-data-row').slideUp();\n      $('div.wc-order-bulk-actions').slideDown();\n      $('div.wc-order-totals-items').slideDown();\n      $('#woocommerce-order-items div.refund').hide();\n      $('.wc-order-edit-line-item .wc-order-edit-line-item-actions').show();\n\n      // Reload the items\n      if ('true' === $(this).attr('data-reload')) {\n        dokan_seller_meta_boxes_order_items.reload_items();\n      }\n      return false;\n    },\n    refunds: {\n      do_refund: async function () {\n        dokan_seller_meta_boxes_order_items.block();\n        const isRefund = await dokan_sweetalert(dokan_refund.i18n_do_refund, {\n          action: 'confirm',\n          icon: 'warning'\n        });\n        if ('undefined' !== isRefund && isRefund.isConfirmed) {\n          var refund_amount = $('input#refund_amount').val();\n          var refund_reason = $('input#refund_reason').val();\n\n          // Get line item refunds\n          var line_item_qtys = {};\n          var line_item_totals = {};\n          var line_item_tax_totals = {};\n          $('.refund input.refund_order_item_qty').each(function (index, item) {\n            if ($(item).closest('tr').data('order_item_id')) {\n              if (item.value) {\n                line_item_qtys[$(item).closest('tr').data('order_item_id')] = item.value;\n              }\n            }\n          });\n          $('.refund input.refund_line_total').each(function (index, item) {\n            if ($(item).closest('tr').data('order_item_id')) {\n              line_item_totals[$(item).closest('tr').data('order_item_id')] = accounting.unformat(item.value, dokan_refund.mon_decimal_point);\n            }\n          });\n          $('.refund input.refund_line_tax').each(function (index, item) {\n            if ($(item).closest('tr').data('order_item_id')) {\n              var tax_id = $(item).data('tax_id');\n              if (!line_item_tax_totals[$(item).closest('tr').data('order_item_id')]) {\n                line_item_tax_totals[$(item).closest('tr').data('order_item_id')] = {};\n              }\n              line_item_tax_totals[$(item).closest('tr').data('order_item_id')][tax_id] = accounting.unformat(item.value, dokan_refund.mon_decimal_point);\n            }\n          });\n          var data = {\n            action: 'dokan_refund_request',\n            order_id: dokan_refund.post_id,\n            refund_amount: refund_amount,\n            refund_reason: refund_reason,\n            line_item_qtys: JSON.stringify(line_item_qtys, null, ''),\n            line_item_totals: JSON.stringify(line_item_totals, null, ''),\n            line_item_tax_totals: JSON.stringify(line_item_tax_totals, null, ''),\n            api_refund: $(this).is('.do-api-refund'),\n            restock_refunded_items: $('#restock_refunded_items:checked').length ? 'true' : 'false',\n            security: dokan_refund.order_item_nonce\n          };\n          $.post(dokan_refund.ajax_url, data, function (response) {\n            response.data.message ? dokan_sweetalert(response.data.message, {\n              icon: 'success'\n            }) : null;\n            dokan_seller_meta_boxes_order_items.reload_items();\n          }).fail(function (jqXHR) {\n            var message = [];\n            if (jqXHR.responseJSON.data) {\n              var data = jqXHR.responseJSON.data;\n              if ($.isArray(data)) {\n                message = jqXHR.responseJSON.data.map(function (item) {\n                  return item.message;\n                });\n              } else {\n                message.push(data);\n              }\n            }\n            dokan_sweetalert(message.join(' '), {\n              icon: 'error'\n            });\n            dokan_seller_meta_boxes_order_items.unblock();\n          });\n        } else {\n          dokan_seller_meta_boxes_order_items.unblock();\n        }\n      },\n      input_changed: function () {\n        var refund_amount = 0;\n        var $items = $('.woocommerce_order_items').find('tr.item, tr.fee, tr.shipping');\n        $items.each(function () {\n          var $row = $(this);\n          var refund_cost_fields = $row.find('.refund input:not(.refund_order_item_qty)');\n          refund_cost_fields.each(function (index, el) {\n            refund_amount += parseFloat(accounting.unformat($(el).val() || 0, dokan_refund.mon_decimal_point));\n          });\n        });\n        $('#refund_amount').val(accounting.formatNumber(refund_amount, dokan_refund.currency_format_num_decimals, '', dokan_refund.mon_decimal_point)).trigger('change');\n      },\n      amount_changed: function () {\n        var total = accounting.unformat($(this).val(), dokan_refund.mon_decimal_point);\n        $('button .wc-order-refund-amount .amount').text(accounting.formatMoney(total, {\n          symbol: dokan_refund.currency_format_symbol,\n          decimal: dokan_refund.currency_format_decimal_sep,\n          thousand: dokan_refund.currency_format_thousand_sep,\n          precision: dokan_refund.currency_format_num_decimals,\n          format: dokan_refund.currency_format\n        }));\n      },\n      // When the refund qty is changed, increase or decrease costs\n      refund_quantity_changed: function () {\n        var $row = $(this).closest('tr.item');\n        var qty = $row.find('input.quantity').val();\n        var refund_qty = $(this).val();\n        var line_total = $('input.line_total', $row);\n        var refund_line_total = $('input.refund_line_total', $row);\n\n        // Totals\n        var unit_total = accounting.unformat(line_total.attr('data-total'), dokan_refund.mon_decimal_point) / qty;\n        refund_line_total.val(parseFloat(accounting.formatNumber(unit_total * refund_qty, dokan_refund.rounding_precision, '')).toString().replace('.', dokan_refund.mon_decimal_point)).trigger('change');\n\n        // Taxes\n        $('td.line_tax', $row).each(function () {\n          var line_total_tax = $('input.line_tax', $(this));\n          var refund_line_total_tax = $('input.refund_line_tax', $(this));\n          var unit_total_tax = accounting.unformat(line_total_tax.attr('data-total_tax'), dokan_refund.mon_decimal_point) / qty;\n          if (0 < unit_total_tax) {\n            var round_at_subtotal = 'yes' === dokan_refund.round_at_subtotal;\n            var precision = dokan_refund[round_at_subtotal ? 'rounding_precision' : 'currency_format_num_decimals'];\n            refund_line_total_tax.val(parseFloat(accounting.formatNumber(unit_total_tax * refund_qty, precision, '')).toString().replace('.', dokan_refund.mon_decimal_point)).trigger('change');\n          } else {\n            refund_line_total_tax.val(0).trigger('change');\n          }\n        });\n\n        // Restock checkbox\n        if (refund_qty > 0) {\n          $('#restock_refunded_items').closest('tr').show();\n        } else {\n          $('#restock_refunded_items').closest('tr').hide();\n          $('.woocommerce_order_items input.refund_order_item_qty').each(function () {\n            if ($(this).val() > 0) {\n              $('#restock_refunded_items').closest('tr').show();\n            }\n          });\n        }\n        $(this).trigger('refund_quantity_changed');\n      }\n    }\n  };\n  dokan_seller_meta_boxes_order_items.init();\n\n  // Ajax search customers\n  $('#dokan-filter-customer').filter(':not(.enhanced)').each(function () {\n    var select2_args = {\n      allowClear: $(this).data('allow_clear') ? true : false,\n      placeholder: $(this).data('placeholder'),\n      minimumInputLength: $(this).data('minimum_input_length') ? $(this).data('minimum_input_length') : '1',\n      escapeMarkup: function (m) {\n        return m;\n      },\n      language: {\n        errorLoading: function () {\n          // Workaround for https://github.com/select2/select2/issues/4355 instead of i18n_ajax_error.\n          return dokan.i18n_searching;\n        },\n        inputTooLong: function (args) {\n          var overChars = args.input.length - args.maximum;\n          if (1 === overChars) {\n            return dokan.i18n_input_too_long_1;\n          }\n          return dokan.i18n_input_too_long_n.replace('%qty%', overChars);\n        },\n        inputTooShort: function (args) {\n          var remainingChars = args.minimum - args.input.length;\n          if (1 === remainingChars) {\n            return dokan.i18n_input_too_short_1;\n          }\n          return dokan.i18n_input_too_short_n.replace('%qty%', remainingChars);\n        },\n        loadingMore: function () {\n          return dokan.i18n_load_more;\n        },\n        maximumSelected: function (args) {\n          if (args.maximum === 1) {\n            return dokan.i18n_selection_too_long_1;\n          }\n          return dokan.i18n_selection_too_long_n.replace('%qty%', args.maximum);\n        },\n        noResults: function () {\n          return dokan.i18n_no_matches;\n        },\n        searching: function () {\n          return dokan.i18n_searching;\n        }\n      },\n      ajax: {\n        url: dokan.ajaxurl,\n        dataType: 'json',\n        delay: 1000,\n        data: function (params) {\n          return {\n            term: params.term,\n            action: 'dokan_json_search_vendor_customers',\n            security: dokan.search_customer_nonce,\n            exclude: $(this).data('exclude')\n          };\n        },\n        processResults: function (data) {\n          var terms = [];\n          if (data) {\n            $.each(data, function (id, text) {\n              terms.push({\n                id: id,\n                text: text\n              });\n            });\n          }\n          return {\n            results: terms\n          };\n        },\n        cache: true\n      }\n    };\n    $(this).select2(select2_args).addClass('enhanced');\n    if ($(this).data('sortable')) {\n      var $select = $(this);\n      var $list = $(this).next('.select2-container').find('ul.select2-selection__rendered');\n      $list.sortable({\n        placeholder: 'ui-state-highlight select2-selection__choice',\n        forcePlaceholderSize: true,\n        items: 'li:not(.select2-search__field)',\n        tolerance: 'pointer',\n        stop: function () {\n          $($list.find('.select2-selection__choice').get().reverse()).each(function () {\n            var id = $(this).data('data').id;\n            var option = $select.find('option[value=\"' + id + '\"]')[0];\n            $select.prepend(option);\n          });\n        }\n      });\n    }\n  });\n})(jQuery);\n\n//# sourceURL=webpack://dokan/./assets/src/js/orders.js?");

/***/ }),

/***/ "./assets/src/js/product-editor.js":
/*!*****************************************!*\
  !*** ./assets/src/js/product-editor.js ***!
  \*****************************************/
/***/ (() => {

eval(";\n(function ($) {\n  var variantsHolder = $('#variants-holder');\n  var product_gallery_frame;\n  var product_featured_frame;\n  var $image_gallery_ids = $('#product_image_gallery');\n  var $product_images = $('#product_images_container ul.product_images');\n  var Dokan_Editor = {\n    modal: false,\n    /**\n     * Constructor function\n     */\n    init: function () {\n      product_type = 'simple';\n      $('.product-edit-container').on('click', '.dokan-section-heading', this.toggleProductSection);\n      $('.product-edit-container').on('click', 'input[type=checkbox]#_downloadable', this.downloadable);\n      $('.product-edit-container').on('click', 'a.sale-schedule', this.showDiscountSchedule);\n\n      // gallery\n      $('body, #dokan-product-images').on('click', 'a.add-product-images', this.gallery.addImages);\n      $('body, #dokan-product-images').on('click', 'a.action-delete', this.gallery.deleteImage);\n      this.gallery.sortable();\n\n      // featured image\n      $('body, .product-edit-container').on('click', 'a.dokan-feat-image-btn', this.featuredImage.addImage);\n      $('body, .product-edit-container').on('click', 'a.dokan-remove-feat-image', this.featuredImage.removeImage);\n      $('body, #variable_product_options').on('click', '.sale_schedule', this.saleSchedule);\n      $('body, #variable_product_options').on('click', '.cancel_sale_schedule', this.cancelSchedule);\n\n      // new product design variations\n      $('.product-edit-container').on('change', 'input[type=checkbox]#_manage_stock', this.showManageStock);\n      $('.product-edit-container').on('click', 'a.upload_file_button', this.fileDownloadable);\n\n      // File inputs\n      $('body').on('click', 'a.insert-file-row', function () {\n        $(this).closest('table').find('tbody').append($(this).data('row'));\n        return false;\n      });\n      $('body').on('click', 'a.dokan-product-delete', function () {\n        $(this).closest('tr').remove();\n        return false;\n      });\n      $('body').on('submit', 'form.dokan-product-edit-form', this.inputValidate);\n\n      // For new desing in product page\n      $('.dokan-product-listing').on('click', 'a.dokan-add-new-product', this.addProductPopup);\n      this.loadSelect2();\n      this.bindProductTagDropdown();\n      this.attribute.sortable();\n      this.checkProductPostboxToggle();\n      $('.product-edit-container .dokan-product-attribute-wrapper').on('click', 'a.dokan-product-toggle-attribute, .dokan-product-attribute-heading', this.attribute.toggleAttribute);\n      $('.product-edit-container .dokan-product-attribute-wrapper').on('click', 'a.add_new_attribute', this.attribute.addNewAttribute);\n      $('.product-edit-container .dokan-product-attribute-wrapper').on('keyup', 'input.dokan-product-attribute-name', this.attribute.dynamicAttrNameChange);\n      $('.dokan-product-attribute-wrapper ul.dokan-attribute-option-list').on('click', 'button.dokan-select-all-attributes', this.attribute.selectAllAttr);\n      $('.dokan-product-attribute-wrapper ul.dokan-attribute-option-list').on('click', 'button.dokan-select-no-attributes', this.attribute.selectNoneAttr);\n      $('.dokan-product-attribute-wrapper ul.dokan-attribute-option-list').on('click', 'button.dokan-add-new-attribute', this.attribute.addNewExtraAttr);\n      $('.product-edit-container .dokan-product-attribute-wrapper').on('click', 'a.dokan-product-remove-attribute', this.attribute.removeAttribute);\n      $('.product-edit-container .dokan-product-attribute-wrapper').on('click', 'a.dokan-save-attribute', this.attribute.saveAttribute);\n      $('body').on('click', '.product-container-footer input[type=\"submit\"]', this.createNewProduct);\n      this.attribute.disbalePredefinedAttribute();\n      this.setCorrectProductId();\n      $('body').trigger('dokan-product-editor-loaded', this);\n    },\n    setCorrectProductId: function () {\n      let productForm = $('.dokan-product-edit-form');\n      if (!productForm) {\n        return;\n      }\n      let productId = $('#dokan_product_id').val();\n      if (window.history.replaceState) {\n        let url = new URL(document.location);\n        let searchParams = url.searchParams;\n        let currentProductId = searchParams.get('product_id');\n        if (!('' === currentProductId || '0' === currentProductId)) {\n          return;\n        }\n\n        // new value of \"product_id\" is set to new value\n        searchParams.set('product_id', productId);\n        let action = searchParams.get('action');\n        if ('edit' !== action) {\n          return;\n        }\n\n        // change the search property of the main url\n        url.search = searchParams.toString();\n\n        // the new url string\n        let newUrl = url.toString();\n        let stateData = {\n          product_id: productId\n        };\n        window.history.replaceState(stateData, document.title, newUrl);\n      }\n    },\n    saleSchedule: function () {\n      var $wrap = $(this).closest('.dokan-product-field-content', 'div, table');\n      $(this).hide();\n      $wrap.find('.cancel_sale_schedule').show();\n      $wrap.find('.sale_price_dates_fields').show();\n      return false;\n    },\n    cancelSchedule: function () {\n      var $wrap = $(this).closest('.dokan-product-field-content', 'div, table');\n      $(this).hide();\n      $wrap.find('.sale_schedule').show();\n      $wrap.find('.sale_price_dates_fields').hide();\n      $wrap.find('.sale_price_dates_fields').find('input').val('');\n      return false;\n    },\n    checkProductPostboxToggle: function () {\n      var toggle = JSON.parse(localStorage.getItem('toggleClasses'));\n      $.each(toggle, function (el, i) {\n        var wrapper = $('.' + el.replace(/_/g, '-')),\n          content = wrapper.find('.dokan-section-content'),\n          targetIcon = wrapper.find('i.fa-sort-desc');\n        if (i) {\n          content.show();\n          targetIcon.removeClass('fa-flip-horizointal').addClass('fa-flip-vertical');\n          targetIcon.css('marginTop', '9px');\n        } else {\n          content.hide();\n          targetIcon.removeClass('fa-flip-vertical').addClass('fa-flip-horizointal');\n          targetIcon.css('marginTop', '0px');\n        }\n      });\n    },\n    toggleProductSection: function (e) {\n      e.preventDefault();\n      var self = $(this);\n      if (JSON.parse(localStorage.getItem('toggleClasses')) != null) {\n        var toggleClasses = JSON.parse(localStorage.getItem('toggleClasses'));\n      } else {\n        var toggleClasses = {};\n      }\n      self.closest('.dokan-edit-row').find('.dokan-section-content').slideToggle(300, function () {\n        if ($(this).is(':visible')) {\n          var targetIcon = self.find('i.fa-sort-desc');\n          targetIcon.removeClass('fa-flip-horizointal').addClass('fa-flip-vertical');\n          targetIcon.css('marginTop', '9px');\n          toggleClasses[self.data('togglehandler')] = true;\n        } else {\n          var targetIcon = self.find('i.fa-sort-desc');\n          targetIcon.removeClass('fa-flip-vertical').addClass('fa-flip-horizointal');\n          targetIcon.css('marginTop', '0px');\n          toggleClasses[self.data('togglehandler')] = false;\n        }\n        localStorage.setItem('toggleClasses', JSON.stringify(toggleClasses));\n      });\n    },\n    loadSelect2: function () {\n      $('.dokan-select2').select2({\n        \"language\": {\n          \"noResults\": function () {\n            return dokan.i18n_no_result_found;\n          }\n        }\n      });\n    },\n    bindProductTagDropdown: function () {\n      $(\".product_tag_search\").select2({\n        allowClear: false,\n        tags: dokan.product_vendors_can_create_tags && 'on' === dokan.product_vendors_can_create_tags,\n        createTag: function ($params) {\n          var $term = $.trim($params.term);\n          if ($term === '') {\n            return null;\n          }\n          return {\n            id: $term,\n            text: $term,\n            newTag: true // add additional parameters\n          };\n        },\n        insertTag: function (data, tag) {\n          var $found = false;\n          $.each(data, function (index, value) {\n            if ($.trim(tag.text).toUpperCase() == $.trim(value.text).toUpperCase()) {\n              $found = true;\n            }\n          });\n          if (!$found) data.unshift(tag);\n        },\n        minimumInputLength: 0,\n        maximumSelectionLength: dokan.maximum_tags_select_length !== undefined ? dokan.maximum_tags_select_length : -1,\n        ajax: {\n          url: dokan.ajaxurl,\n          dataType: 'json',\n          delay: 250,\n          data: function (params) {\n            return {\n              q: params.term,\n              action: 'dokan_json_search_products_tags',\n              security: dokan.search_products_tags_nonce,\n              page: params.page || 1\n            };\n          },\n          processResults: function (data) {\n            var options = [];\n            if (data) {\n              $.each(data, function (index, text) {\n                options.push({\n                  id: text[0],\n                  text: text[1]\n                });\n              });\n            }\n            return {\n              results: options,\n              pagination: {\n                more: options.length == 0 ? false : true\n              }\n            };\n          },\n          cache: true\n        },\n        language: {\n          errorLoading: function () {\n            return dokan.i18n_searching;\n          },\n          inputTooLong: function (args) {\n            var overChars = args.input.length - args.maximum;\n            if (1 === overChars) {\n              return dokan.i18n_input_too_long_1;\n            }\n            return dokan.i18n_input_too_long_n.replace('%qty%', overChars);\n          },\n          inputTooShort: function (args) {\n            var remainingChars = args.minimum - args.input.length;\n            if (1 === remainingChars) {\n              return dokan.i18n_input_too_short_1;\n            }\n            return dokan.i18n_input_too_short_n.replace('%qty%', remainingChars);\n          },\n          loadingMore: function () {\n            return dokan.i18n_load_more;\n          },\n          maximumSelected: function (args) {\n            if (args.maximum === 1) {\n              return dokan.i18n_selection_too_long_1;\n            }\n            return dokan.i18n_selection_too_long_n.replace('%qty%', args.maximum);\n          },\n          noResults: function () {\n            return dokan.i18n_no_matches;\n          },\n          searching: function () {\n            return dokan.i18n_searching;\n          }\n        },\n        escapeMarkup: function (markup) {\n          return markup;\n        },\n        templateResult: function (item) {\n          return `<span>${item.text}</span>`;\n        },\n        templateSelection: function (item) {\n          return item.text;\n        }\n      });\n    },\n    addProductPopup: function (e) {\n      e.preventDefault();\n      Dokan_Editor.openProductPopup();\n    },\n    openProductPopup: function () {\n      const productTemplate = wp.template('dokan-add-new-product'),\n        modalElem = $('#dokan-add-product-popup');\n      Dokan_Editor.modal = modalElem.iziModal({\n        headerColor: dokan.modal_header_color,\n        overlayColor: 'rgba(0, 0, 0, 0.8)',\n        width: 690,\n        top: 32,\n        onOpening: () => {\n          Dokan_Editor.reRenderPopupElements();\n        },\n        onClosed: () => {\n          product_gallery_frame = undefined;\n          product_featured_frame = undefined;\n          $('#dokan-add-new-product-popup input[name=\"_sale_price_dates_from\"], #dokan-add-new-product-popup input[name=\"_sale_price_dates_to\"]').datepicker('destroy');\n        }\n      });\n      Dokan_Editor.modal.iziModal('setContent', productTemplate().trim());\n      Dokan_Editor.modal.iziModal('open');\n    },\n    reRenderPopupElements: function () {\n      Dokan_Editor.loadSelect2();\n      Dokan_Editor.bindProductTagDropdown();\n      $('#dokan-add-new-product-popup .sale_price_dates_fields input').daterangepicker({\n        singleDatePicker: true,\n        showDropdowns: false,\n        autoApply: true,\n        parentEl: '#dokan-add-new-product-popup',\n        opens: 'left',\n        autoUpdateInput: false\n      }).on('apply.daterangepicker', function (ev, picker) {\n        $(this).val(picker.startDate.format('YYYY-MM-DD'));\n      });\n      $('.tips').tooltip();\n      Dokan_Editor.gallery.sortable();\n      $('body').trigger('dokan-product-editor-popup-opened', Dokan_Editor);\n    },\n    createNewProduct: function (e) {\n      e.preventDefault();\n      var self = $(this),\n        form = self.closest('form#dokan-add-new-product-form'),\n        btn_id = self.attr('data-btn_id');\n      form.find('span.dokan-show-add-product-success').html('');\n      form.find('span.dokan-show-add-product-error').html('');\n      form.find('span.dokan-add-new-product-spinner').css('display', 'inline-block');\n      self.attr('disabled', 'disabled');\n      if (form.find('input[name=\"post_title\"]').val() == '') {\n        $('span.dokan-show-add-product-error').html(dokan.product_title_required);\n        self.removeAttr('disabled');\n        form.find('span.dokan-add-new-product-spinner').css('display', 'none');\n        return;\n      }\n      if (form.find('select[name=\"product_cat\"]').val() == '-1') {\n        $('span.dokan-show-add-product-error').html(dokan.product_category_required);\n        self.removeAttr('disabled');\n        form.find('span.dokan-add-new-product-spinner').css('display', 'none');\n        return;\n      }\n      var data = {\n        action: 'dokan_create_new_product',\n        postdata: form.serialize(),\n        _wpnonce: dokan.nonce\n      };\n      Dokan_Editor.modal.iziModal('startLoading');\n      $.post(dokan.ajaxurl, data, function (resp) {\n        if (resp.success) {\n          self.removeAttr('disabled');\n          if (btn_id === 'create_new') {\n            $('#dokan-add-product-popup').iziModal('close');\n            window.location.href = resp.data;\n          } else {\n            product_featured_frame = undefined;\n            $('.dokan-dashboard-product-listing-wrapper').load(window.location.href + ' table.product-listing-table');\n            Dokan_Editor.modal.iziModal('resetContent');\n            Dokan_Editor.openProductPopup();\n            Dokan_Editor.reRenderPopupElements();\n            $('span.dokan-show-add-product-success').html(dokan.product_created_response);\n            setTimeout(function () {\n              $('span.dokan-show-add-product-success').html('');\n            }, 3000);\n          }\n        } else {\n          self.removeAttr('disabled');\n          $('span.dokan-show-add-product-error').html(resp.data);\n        }\n        form.find('span.dokan-add-new-product-spinner').css('display', 'none');\n      }).always(function () {\n        Dokan_Editor.modal.iziModal('stopLoading');\n      });\n    },\n    attribute: {\n      toggleAttribute: function (e) {\n        e.preventDefault();\n        var self = $(this),\n          list = self.closest('li'),\n          item = list.find('.dokan-product-attribute-item');\n        if ($(item).hasClass('dokan-hide')) {\n          self.closest('.dokan-product-attribute-heading').css({\n            borderBottom: '1px solid #e3e3e3'\n          });\n          $(item).slideDown(200, function () {\n            self.find('i.fa').removeClass('fa-flip-horizointal').addClass('fa-flip-vertical');\n            $(this).removeClass('dokan-hide');\n            if (!$(e.target).hasClass('dokan-product-attribute-heading')) {\n              $(e.target).closest('a').css('top', '12px');\n            } else if ($(e.target).hasClass('dokan-product-attribute-heading')) {\n              self.find('a.dokan-product-toggle-attribute').css('top', '12px');\n            }\n          });\n        } else {\n          $(item).slideUp(200, function () {\n            $(this).addClass('dokan-hide');\n            self.find('i.fa').removeClass('fa-flip-vertical').addClass('fa-flip-horizointal');\n            if (!$(e.target).hasClass('dokan-product-attribute-heading')) {\n              $(e.target).closest('a').css('top', '7px');\n            } else if ($(e.target).hasClass('dokan-product-attribute-heading')) {\n              self.find('a.dokan-product-toggle-attribute').css('top', '7px');\n            }\n            self.closest('.dokan-product-attribute-heading').css({\n              borderBottom: 'none'\n            });\n          });\n        }\n        return false;\n      },\n      sortable: function () {\n        $('.dokan-product-attribute-wrapper ul').sortable({\n          items: 'li.product-attribute-list',\n          cursor: 'move',\n          scrollSensitivity: 40,\n          forcePlaceholderSize: true,\n          forceHelperSize: false,\n          helper: 'clone',\n          opacity: 0.65,\n          placeholder: 'dokan-sortable-placeholder',\n          start: function (event, ui) {\n            ui.item.css('background-color', '#f6f6f6');\n          },\n          stop: function (event, ui) {\n            ui.item.removeAttr('style');\n          },\n          update: function (event, ui) {\n            var attachment_ids = '';\n            Dokan_Editor.attribute.reArrangeAttribute();\n          }\n        });\n      },\n      dynamicAttrNameChange: function (e) {\n        e.preventDefault();\n        var self = $(this),\n          value = self.val();\n        if (value == '') {\n          self.closest('li').find('strong').html(dokan.i18n_attribute_label);\n        } else {\n          self.closest('li').find('strong').html(value);\n        }\n      },\n      selectAllAttr: function (e) {\n        e.preventDefault();\n        $(this).closest('li.product-attribute-list').find('select.dokan_attribute_values option').attr('selected', true);\n        $(this).closest('li.product-attribute-list').find('select.dokan_attribute_values').trigger('change');\n        return false;\n      },\n      selectNoneAttr: function (e) {\n        e.preventDefault();\n        $(this).closest('li.product-attribute-list').find('select.dokan_attribute_values option').attr('selected', false);\n        $(this).closest('li.product-attribute-list').find('select.dokan_attribute_values').trigger('change');\n        return false;\n      },\n      reArrangeAttribute: function () {\n        var attributeWrapper = $('.dokan-product-attribute-wrapper').find('ul.dokan-attribute-option-list');\n        attributeWrapper.find('li.product-attribute-list').css('cursor', 'default').each(function (i) {\n          $(this).find('.attribute_position').val(i);\n        });\n      },\n      addNewExtraAttr: async function (e) {\n        e.preventDefault();\n        var $wrapper = $(this).closest('li.product-attribute-list');\n        var attribute = $wrapper.data('taxonomy');\n        let result = await dokan_sweetalert(dokan.new_attribute_prompt, {\n          action: 'prompt',\n          input: 'text'\n        });\n        var new_attribute_name = result.value;\n        if (new_attribute_name) {\n          var data = {\n            action: 'dokan_add_new_attribute',\n            taxonomy: attribute,\n            term: new_attribute_name,\n            _wpnonce: dokan.nonce\n          };\n          $.post(dokan.ajaxurl, data, function (response) {\n            if (response.error) {\n              dokan_sweetalert(response.error, {\n                action: 'alert',\n                icon: 'warning'\n              });\n            } else if (response.slug) {\n              $wrapper.find('select.dokan_attribute_values').append('<option value=\"' + response.slug + '\" selected=\"selected\">' + response.name + '</option>');\n              $wrapper.find('select.dokan_attribute_values').trigger('change');\n            }\n          });\n        }\n      },\n      addNewAttribute: function (e) {\n        e.preventDefault();\n        var self = $(this),\n          attrWrap = self.closest('.dokan-attribute-type').find('select#predefined_attribute'),\n          attribute = attrWrap.val(),\n          size = $('ul.dokan-attribute-option-list .product-attribute-list').length;\n        var data = {\n          action: 'dokan_get_pre_attribute',\n          taxonomy: attribute,\n          i: size,\n          _wpnonce: dokan.nonce\n        };\n        self.closest('.dokan-attribute-type').find('span.dokan-attribute-spinner').removeClass('dokan-hide');\n        $.post(dokan.ajaxurl, data, function (resp) {\n          if (resp.success) {\n            var attributeWrapper = $('.dokan-product-attribute-wrapper').find('ul.dokan-attribute-option-list');\n            $html = $.parseHTML(resp.data);\n            $($html).find('.dokan-product-attribute-item').removeClass('dokan-hide');\n            $($html).find('i.fa.fa-sort-desc').removeClass('fa-flip-horizointal').addClass('fa-flip-vertical');\n            $($html).find('a.dokan-product-toggle-attribute').css('top', '12px');\n            $($html).find('.dokan-product-attribute-heading').css({\n              borderBottom: '1px solid #e3e3e3'\n            });\n            attributeWrapper.append($html);\n            Dokan_Editor.loadSelect2();\n            Dokan_Editor.bindProductTagDropdown();\n            Dokan_Editor.attribute.reArrangeAttribute();\n            if (\"variable\" !== $('select#product_type').val()) {\n              let labels = $('div.dokan-product-attribute-wrapper label.show_if_variable');\n              for (let label of labels) {\n                let checkBox = $(label).find('input[type=\"checkbox\"]');\n                if (checkBox.length > 0 && checkBox[0].getAttribute('name')?.startsWith('attribute_variation[')) {\n                  $(label).hide();\n                }\n              }\n            }\n          }\n          self.closest('.dokan-attribute-type').find('span.dokan-attribute-spinner').addClass('dokan-hide');\n          if (attribute) {\n            attrWrap.find('option[value=\"' + attribute + '\"]').attr('disabled', 'disabled');\n            attrWrap.val('');\n          }\n        }).done(function () {\n          $('select#product_type').trigger('change');\n        });\n      },\n      removeAttribute: async function (evt) {\n        evt.stopPropagation();\n        evt.preventDefault();\n        const isRemoved = await dokan_sweetalert(dokan.remove_attribute, {\n          action: 'confirm',\n          icon: 'warning'\n        });\n        if ('undefined' !== isRemoved && isRemoved.isConfirmed) {\n          var $parent = $(this).closest('li.product-attribute-list');\n          $parent.fadeOut(300, function () {\n            if ($parent.is('.taxonomy')) {\n              $parent.find('select, input[type=text]').val('');\n              $('select.dokan_attribute_taxonomy').find('option[value=\"' + $parent.data('taxonomy') + '\"]').removeAttr('disabled');\n            } else {\n              $parent.find('select, input[type=text]').val('');\n              $parent.hide();\n            }\n            Dokan_Editor.attribute.reArrangeAttribute();\n          });\n        }\n        return false;\n      },\n      saveAttribute: function (e) {\n        e.preventDefault();\n        var self = $(this),\n          data = {\n            post_id: $('#dokan-edit-product-id').val(),\n            data: $('ul.dokan-attribute-option-list').find('input, select, textarea').serialize(),\n            action: 'dokan_save_attributes'\n          };\n        $('.dokan-product-attribute-wrapper').block({\n          message: null,\n          fadeIn: 50,\n          fadeOut: 1000,\n          overlayCSS: {\n            background: '#fff',\n            opacity: 0.6\n          }\n        });\n        $.post(dokan.ajaxurl, data, function (resp) {\n          // Load variations panel.\n          $('#dokan-variable-product-options').load(window.location.toString() + ' #dokan-variable-product-options-inner', function () {\n            $('#dokan-variable-product-options').trigger('reload');\n            $('select#product_type').trigger('change');\n            $('.dokan-product-attribute-wrapper').unblock();\n          });\n        });\n      },\n      disbalePredefinedAttribute: function () {\n        $('ul.dokan-attribute-option-list li.product-attribute-list').each(function (index, el) {\n          if ($(el).css('display') !== 'none' && $(el).is('.taxonomy')) {\n            $('select#predefined_attribute').find('option[value=\"' + $(el).data('taxonomy') + '\"]').attr('disabled', 'disabled');\n          }\n        });\n      }\n    },\n    inputValidate: function (e) {\n      e.preventDefault();\n      if ($('#post_title').val().trim() == '') {\n        $('#post_title').focus();\n        $('div.dokan-product-title-alert').removeClass('dokan-hide');\n        return;\n      } else {\n        $('div.dokan-product-title-alert').hide();\n      }\n      if ($('select.product_cat').val() == -1) {\n        $('select.product_cat').focus();\n        $('div.dokan-product-cat-alert').removeClass('dokan-hide');\n        return;\n      } else {\n        $('div.dokan-product-cat-alert').hide();\n      }\n      $('input[type=submit]').attr('disabled', 'disabled');\n      this.submit();\n    },\n    downloadable: function () {\n      if ($(this).prop('checked')) {\n        $(this).closest('aside').find('.dokan-side-body').removeClass('dokan-hide');\n      } else {\n        $(this).closest('aside').find('.dokan-side-body').addClass('dokan-hide');\n      }\n    },\n    showDiscountSchedule: function (e) {\n      e.preventDefault();\n      $('.sale-schedule-container').slideToggle('fast');\n    },\n    showManageStock: function (e) {\n      const product_type = $('#product_type').val();\n      if ($(this).is(':checked') && 'external' !== product_type) {\n        $('.show_if_stock').slideDown('fast');\n      } else {\n        $('.show_if_stock').slideUp('fast');\n      }\n      if ('simple' === product_type) {\n        $(this).is(':checked') ? $('.hide_if_stock_global').slideUp('fast') : $('.hide_if_stock_global').slideDown('fast');\n      }\n    },\n    gallery: {\n      addImages: function (e) {\n        e.preventDefault();\n        var self = $(this),\n          p_images = self.closest('.dokan-product-gallery').find('#product_images_container ul.product_images'),\n          images_gid = self.closest('.dokan-product-gallery').find('#product_image_gallery');\n        if (product_gallery_frame) {\n          product_gallery_frame.open();\n          return;\n        } else {\n          // Create the media frame.\n          product_gallery_frame = wp.media({\n            // Set the title of the modal.\n            title: dokan.i18n_choose_gallery,\n            library: {\n              type: 'image'\n            },\n            button: {\n              text: dokan.i18n_choose_gallery_btn_text\n            },\n            multiple: true\n          });\n          product_gallery_frame.on('select', function () {\n            var selection = product_gallery_frame.state().get('selection');\n            selection.map(function (attachment) {\n              attachment = attachment.toJSON();\n              attachment_ids = [];\n\n              // Check if attachment doesn't exist or attachment type is not image\n              if (!attachment.id || 'image' !== attachment.type) {\n                return;\n              }\n              $('<li class=\"image\" data-attachment_id=\"' + attachment.id + '\">\\\n                                    <img src=\"' + attachment.url + '\" />\\\n                                    <a href=\"#\" class=\"action-delete\">&times;</a>\\\n                                </li>').insertBefore(p_images.find('li.add-image'));\n              $('#product_images_container ul li.image').css('cursor', 'default').each(function () {\n                var attachment_id = jQuery(this).attr('data-attachment_id');\n                attachment_ids.push(attachment_id);\n              });\n              images_gid.val(attachment_ids.join(','));\n            });\n          });\n          product_gallery_frame.open();\n        }\n      },\n      deleteImage: function (e) {\n        e.preventDefault();\n        var self = $(this),\n          p_images = self.closest('.dokan-product-gallery').find('#product_images_container ul.product_images'),\n          images_gid = self.closest('.dokan-product-gallery').find('#product_image_gallery');\n        self.closest('li.image').remove();\n        var attachment_ids = [];\n        $('#product_images_container ul li.image').css('cursor', 'default').each(function () {\n          var attachment_id = $(this).attr('data-attachment_id');\n          attachment_ids.push(attachment_id);\n        });\n        images_gid.val(attachment_ids.join(','));\n        return false;\n      },\n      sortable: function () {\n        // Image ordering\n        $('body').find('#product_images_container ul.product_images').sortable({\n          items: 'li.image',\n          cursor: 'move',\n          scrollSensitivity: 40,\n          forcePlaceholderSize: true,\n          forceHelperSize: false,\n          helper: 'clone',\n          opacity: 0.65,\n          placeholder: 'dokan-sortable-placeholder',\n          start: function (event, ui) {\n            ui.item.css('background-color', '#f6f6f6');\n          },\n          stop: function (event, ui) {\n            ui.item.removeAttr('style');\n          },\n          update: function (event, ui) {\n            var attachment_ids = [];\n            $('body').find('#product_images_container ul li.image').css('cursor', 'default').each(function () {\n              var attachment_id = jQuery(this).attr('data-attachment_id');\n              attachment_ids.push(attachment_id);\n            });\n            $('body').find('#product_image_gallery').val(attachment_ids.join(','));\n          }\n        });\n      }\n    },\n    featuredImage: {\n      addImage: function (e) {\n        e.preventDefault();\n        var self = $(this);\n        if (product_featured_frame) {\n          product_featured_frame.open();\n          return;\n        } else {\n          product_featured_frame = wp.media({\n            // Set the title of the modal.\n            title: dokan.i18n_choose_featured_img,\n            library: {\n              type: 'image'\n            },\n            button: {\n              text: dokan.i18n_choose_featured_img_btn_text\n            }\n          });\n          product_featured_frame.on('select', function () {\n            var selection = product_featured_frame.state().get('selection');\n            selection.map(function (attachment) {\n              attachment = attachment.toJSON();\n\n              // Check if the attachment type is image.\n              if ('image' !== attachment.type) {\n                return;\n              }\n\n              // set the image hidden id\n              self.siblings('input.dokan-feat-image-id').val(attachment.id);\n\n              // set the image\n              var instruction = self.closest('.instruction-inside');\n              var wrap = instruction.siblings('.image-wrap');\n\n              // wrap.find('img').attr('src', attachment.sizes.thumbnail.url);\n              wrap.find('img').attr('src', attachment.url);\n              wrap.find('img').removeAttr('srcset');\n              instruction.addClass('dokan-hide');\n              wrap.removeClass('dokan-hide');\n            });\n          });\n          product_featured_frame.open();\n        }\n      },\n      removeImage: function (e) {\n        e.preventDefault();\n        var self = $(this);\n        var wrap = self.closest('.image-wrap');\n        var instruction = wrap.siblings('.instruction-inside');\n        instruction.find('input.dokan-feat-image-id').val('0');\n        wrap.addClass('dokan-hide');\n        instruction.removeClass('dokan-hide');\n      }\n    },\n    fileDownloadable: function (e) {\n      e.preventDefault();\n      var self = $(this),\n        downloadable_frame;\n      if (downloadable_frame) {\n        downloadable_frame.open();\n        return;\n      }\n      downloadable_frame = wp.media({\n        title: dokan.i18n_choose_file,\n        button: {\n          text: dokan.i18n_choose_file_btn_text\n        },\n        multiple: true\n      });\n      downloadable_frame.on('select', function () {\n        var selection = downloadable_frame.state().get('selection');\n        selection.map(function (attachment) {\n          attachment = attachment.toJSON();\n          self.closest('tr').find('input.wc_file_url, input.wc_variation_file_url').val(attachment.url);\n        });\n      });\n      downloadable_frame.on('ready', function () {\n        downloadable_frame.uploader.options.uploader.params = {\n          type: 'downloadable_product'\n        };\n      });\n      downloadable_frame.open();\n    }\n  };\n\n  // On DOM ready\n  $(function () {\n    Dokan_Editor.init();\n\n    // PRODUCT TYPE SPECIFIC OPTIONS.\n    $('select#product_type').on('change', function () {\n      // Get value.\n      var select_val = $(this).val();\n      if ('variable' === select_val) {\n        $('input#_manage_stock').trigger('change');\n        $('input#_downloadable').prop('checked', false);\n        $('input#_virtual').removeAttr('checked');\n      }\n      show_and_hide_panels();\n      $(document.body).trigger('dokan-product-type-change', select_val, $(this));\n    }).trigger('change');\n    $('.product-edit-container').on('change', 'input#_downloadable, input#_virtual', function () {\n      show_and_hide_panels();\n    }).trigger('change');\n    $('input#_downloadable').trigger('change');\n    $('input#_virtual').trigger('change');\n    function show_and_hide_panels() {\n      var product_type = $('#product_type').val();\n      var is_virtual = $('input#_virtual:checked').length;\n      var is_downloadable = $('input#_downloadable:checked').length;\n      let shippingTaxContainer = $('.dokan-product-shipping-tax');\n\n      // Hide/Show all with rules.\n      var hide_classes = '.hide_if_downloadable, .hide_if_virtual';\n      var show_classes = '.show_if_downloadable, .show_if_virtual';\n      $.each(Object.keys(dokan.product_types), function (index, value) {\n        hide_classes = hide_classes + ', .hide_if_' + value;\n        show_classes = show_classes + ', .show_if_' + value;\n      });\n      $(hide_classes).show();\n      $(show_classes).hide();\n\n      // Shows rules.\n      if (is_downloadable) {\n        $('.show_if_downloadable').show();\n      }\n      if (is_virtual) {\n        $('.show_if_virtual').show();\n      }\n      $('.show_if_' + product_type).show();\n\n      // Hide rules.\n      if (is_downloadable) {\n        $('.hide_if_downloadable').hide();\n      }\n      if (is_virtual) {\n        $('.hide_if_virtual').hide();\n        if (1 === $('.dokan-product-shipping-tax .dokan-section-content').first().children().length) {\n          shippingTaxContainer.hide();\n        } else {\n          if (shippingTaxContainer.hasClass('hide_if_virtual')) {\n            shippingTaxContainer.removeClass('hide_if_virtual');\n          }\n          shippingTaxContainer.show();\n        }\n      } else {\n        shippingTaxContainer.show();\n      }\n      $('.hide_if_' + product_type).hide();\n      $('input#_manage_stock').trigger('change');\n    }\n\n    // Sale price schedule.\n    $('.sale_price_dates_fields').each(function () {\n      var $these_sale_dates = $(this);\n      var sale_schedule_set = false;\n      var $wrap = $these_sale_dates.closest('div, table');\n      $these_sale_dates.find('input').each(function () {\n        if ('' !== $(this).val()) {\n          sale_schedule_set = true;\n        }\n      });\n      if (sale_schedule_set) {\n        $wrap.find('.sale_schedule').hide();\n        $wrap.find('.sale_price_dates_fields').show();\n      } else {\n        $wrap.find('.sale_schedule').show();\n        $wrap.find('.sale_price_dates_fields').hide();\n      }\n    });\n    $('.product-edit-container').on('click', '.sale_schedule', function () {\n      var $wrap = $(this).closest('.product-edit-container, div.dokan-product-variation-itmes, table');\n      $(this).hide();\n      $wrap.find('.cancel_sale_schedule').show();\n      $wrap.find('.sale_price_dates_fields').show();\n      return false;\n    });\n    $('.product-edit-container').on('click', '.cancel_sale_schedule', function () {\n      var $wrap = $('.product-edit-container, div.dokan-product-variation-itmes, table');\n      $(this).hide();\n      $wrap.find('.sale_schedule').show();\n      $wrap.find('.sale_price_dates_fields').hide();\n      $wrap.find('.sale_price_dates_fields').find('input').val('');\n      return false;\n    });\n\n    /**\n     * Handle the editing of the post_name. Create the required HTML elements and\n     * update the changes via Ajax.\n     *\n     * @global\n     *\n     * @return {void}\n     */\n    function dokanProductEditPermalink() {\n      var i,\n        slug_value,\n        $el,\n        revert_e,\n        c = 0,\n        real_slug = $('#post_name'),\n        revert_slug = real_slug.val(),\n        permalink = $('#sample-permalink'),\n        permalinkOrig = permalink.html(),\n        permalinkInner = $('#sample-permalink a').html(),\n        buttons = $('#edit-slug-buttons'),\n        buttonsOrig = buttons.html(),\n        full = $('#editable-post-name-full');\n\n      // Deal with Twemoji in the post-name.\n      full.find('img').replaceWith(function () {\n        return this.alt;\n      });\n      full = full.html();\n      permalink.html(permalinkInner);\n\n      // Save current content to revert to when cancelling.\n      $el = $('#editable-post-name');\n      revert_e = $el.html();\n      buttons.html('<button type=\"button\" class=\"save button button-small\">' + dokan.i18n_ok_text + '</button> <button type=\"button\" class=\"cancel button-link\">' + dokan.i18n_cancel_text + '</button>');\n\n      // Save permalink changes.\n      buttons.children('.save').on('click', function () {\n        var new_slug = $el.children('input').val();\n        if (new_slug == $('#editable-post-name-full').text()) {\n          buttons.children('.cancel').trigger('click');\n          return;\n        }\n        $.post(ajaxurl, {\n          action: 'sample-permalink',\n          post_id: $('#dokan-edit-product-id').val(),\n          new_slug: new_slug,\n          new_title: $('#post_title').val(),\n          samplepermalinknonce: $('#samplepermalinknonce').val()\n        }, function (data) {\n          var box = $('#edit-slug-box');\n          box.html(data);\n          if (box.hasClass('hidden')) {\n            box.fadeIn('fast', function () {\n              box.removeClass('hidden');\n            });\n          }\n          buttons.html(buttonsOrig);\n          permalink.html(permalinkOrig);\n          real_slug.val(new_slug);\n          $('.edit-slug').focus();\n          $('#editable-post-name-full-dokan').val($('#editable-post-name-full').html());\n        });\n      });\n\n      // Cancel editing of permalink.\n      buttons.children('.cancel').on('click', function () {\n        $('#view-post-btn').show();\n        $el.html(revert_e);\n        buttons.html(buttonsOrig);\n        permalink.html(permalinkOrig);\n        real_slug.val(revert_slug);\n        $('.edit-slug').focus();\n      });\n\n      // If more than 1/4th of 'full' is '%', make it empty.\n      for (i = 0; i < full.length; ++i) {\n        if ('%' == full.charAt(i)) c++;\n      }\n      slug_value = c > full.length / 4 ? '' : full;\n      $el.html('<input type=\"text\" id=\"new-post-slug\" value=\"' + slug_value + '\" autocomplete=\"off\" />').children('input').on('keydown', function (e) {\n        var key = e.which;\n        // On [Enter], just save the new slug, don't save the post.\n        if (13 === key) {\n          e.preventDefault();\n          buttons.children('.save').trigger('click');\n        }\n        // On [Esc] cancel the editing.\n        if (27 === key) {\n          buttons.children('.cancel').trigger('click');\n        }\n      }).on('keyup', function () {\n        real_slug.val(this.value);\n      }).focus();\n    }\n    $('#dokan-product-title-area').on('click', '.edit-slug', function () {\n      dokanProductEditPermalink();\n    });\n    if ($('#dokan-edit-product-id').val() && $('#post_title').val() && $('#samplepermalinknonce').val()) {\n      $.post(ajaxurl, {\n        action: 'sample-permalink',\n        post_id: $('#dokan-edit-product-id').val(),\n        new_slug: $('#edited-post-name-dokan').val(),\n        new_title: $('#post_title').val(),\n        samplepermalinknonce: $('#samplepermalinknonce').val()\n      }, function (data) {\n        var box = $('#edit-slug-box');\n        box.html(data);\n      });\n    }\n    function debounce_delay(callback, ms) {\n      var timer = 0;\n      return function () {\n        var context = this,\n          args = arguments;\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n          callback.apply(context, args);\n        }, ms || 0);\n      };\n    }\n    $(window).on(\"load\", function () {\n      if ($('input#_virtual:checked').length) {\n        show_and_hide_panels();\n      }\n    });\n  });\n})(jQuery);\n\n//# sourceURL=webpack://dokan/./assets/src/js/product-editor.js?");

/***/ }),

/***/ "./assets/src/js/script.js":
/*!*********************************!*\
  !*** ./assets/src/js/script.js ***!
  \*********************************/
/***/ (() => {

eval("jQuery(function ($) {\n  var api = wp.customize;\n  $('.datepicker').datepicker({\n    dateFormat: 'yy-mm-dd'\n  });\n\n  // Toggle list table rows on small screens.\n  $('.dokan-table tbody').on('click', '.toggle-row', function () {\n    $(this).closest('tr').toggleClass('is-expanded');\n  });\n  $('.dokan-start-date').datepicker({\n    defaultDate: '',\n    dateFormat: 'yy-mm-dd',\n    numberOfMonths: 1,\n    onSelect: function (selectedDate) {\n      let date = new Date(selectedDate);\n      date.setDate(date.getDate() + 1);\n      $('.dokan-end-date').datepicker('option', {\n        minDate: date\n      });\n    }\n  });\n  $('.dokan-end-date').datepicker({\n    defaultDate: '',\n    dateFormat: 'yy-mm-dd',\n    numberOfMonths: 1,\n    onSelect: function (selectedDate) {\n      let date = new Date(selectedDate);\n      date.setDate(date.getDate() - 1);\n      $('dokan-start-date').datepicker('option', {\n        maxDate: date\n      });\n    }\n  });\n  $('.tips').tooltip();\n  function showTooltip(x, y, contents) {\n    jQuery('<div class=\"chart-tooltip\">' + contents + '</div>').css({\n      top: y - 16,\n      left: x + 20\n    }).appendTo('body').fadeIn(200);\n  }\n  var prev_data_index = null;\n  var prev_series_index = null;\n  jQuery('.chart-placeholder').on('plothover', function (event, pos, item) {\n    if (item) {\n      if (prev_data_index != item.dataIndex || prev_series_index != item.seriesIndex) {\n        prev_data_index = item.dataIndex;\n        prev_series_index = item.seriesIndex;\n        jQuery('.chart-tooltip').remove();\n        if (item.series.points.show || item.series.enable_tooltip) {\n          var y = item.series.data[item.dataIndex][1];\n          tooltip_content = '';\n          if (item.series.prepend_label) tooltip_content = tooltip_content + item.series.label + ': ';\n          if (item.series.prepend_tooltip) tooltip_content = tooltip_content + item.series.prepend_tooltip;\n          tooltip_content = tooltip_content + y;\n          if (item.series.append_tooltip) tooltip_content = tooltip_content + item.series.append_tooltip;\n          if (item.series.pie.show) {\n            showTooltip(pos.pageX, pos.pageY, tooltip_content);\n          } else {\n            showTooltip(item.pageX, item.pageY, tooltip_content);\n          }\n        }\n      }\n    } else {\n      jQuery('.chart-tooltip').remove();\n      prev_data_index = null;\n    }\n  });\n});\n\n//dokan settings\n(function ($) {\n  $.validator.setDefaults({\n    ignore: ':hidden'\n  });\n  var validatorError = function (error, element) {\n    var form_group = $(element).closest('.dokan-form-group');\n    form_group.addClass('has-error').append(error);\n  };\n  var validatorSuccess = function (error, element) {\n    $(element).closest('.dokan-form-group').removeClass('has-error');\n    $(error).remove();\n  };\n  var api = wp.customize;\n  var selectors = 'input[name=\"settings[bank][disconnect]\"], input[name=\"settings[paypal][disconnect]\"], input[name=\"settings[skrill][disconnect]\"], input[name=\"settings[dokan_custom][disconnect]\"]';\n  var Dokan_Settings = {\n    init: function () {\n      var self = this;\n\n      //image upload\n      $('a.dokan-banner-drag').on('click', this.imageUpload);\n      $('a.dokan-remove-banner-image').on('click', this.removeBanner);\n      $('a.dokan-pro-gravatar-drag').on('click', this.gragatarImageUpload);\n      $('a.dokan-gravatar-drag').on('click', this.simpleImageUpload);\n      $('a.dokan-remove-gravatar-image').on('click', this.removeGravatar);\n      $('.dokan-update-setting-top-button').on('click', function () {\n        $(\"input[name='dokan_update_store_settings']\").trigger('click');\n      });\n      this.validateForm(self);\n      $('.dokan_payment_disconnect_btn').on('click', function () {\n        var form = $(this).closest('form');\n        var self = $('form#' + form.attr('id'));\n        $(':input', form).not(':button, :submit, :reset, :hidden, :checkbox').val('').prop('selected', false);\n        var data = form.serializeArray().reduce(function (obj, item) {\n          obj[item.name] = item.value;\n          return obj;\n        }, {});\n        data[$(this).attr('name')] = '';\n        data['form_id'] = form.attr('id');\n        data['action'] = 'dokan_settings';\n        var isDisconnect = true;\n        Dokan_Settings.handleRequest(self, data, isDisconnect);\n      });\n      return false;\n    },\n    calculateImageSelectOptions: function (attachment, controller) {\n      var xInit = parseInt(dokan.store_banner_dimension.width, 10),\n        yInit = parseInt(dokan.store_banner_dimension.height, 10),\n        flexWidth = !!parseInt(dokan.store_banner_dimension['flex-width'], 10),\n        flexHeight = !!parseInt(dokan.store_banner_dimension['flex-height'], 10),\n        ratio,\n        xImg,\n        yImg,\n        realHeight,\n        realWidth,\n        imgSelectOptions;\n      realWidth = attachment.get('width');\n      realHeight = attachment.get('height');\n      this.headerImage = new api.HeaderTool.ImageModel();\n      this.headerImage.set({\n        themeWidth: xInit,\n        themeHeight: yInit,\n        themeFlexWidth: flexWidth,\n        themeFlexHeight: flexHeight,\n        imageWidth: realWidth,\n        imageHeight: realHeight\n      });\n      controller.set('canSkipCrop', !this.headerImage.shouldBeCropped());\n      ratio = xInit / yInit;\n      xImg = realWidth;\n      yImg = realHeight;\n      if (xImg / yImg > ratio) {\n        yInit = yImg;\n        xInit = yInit * ratio;\n      } else {\n        xInit = xImg;\n        yInit = xInit / ratio;\n      }\n      imgSelectOptions = {\n        handles: true,\n        keys: true,\n        instance: true,\n        persistent: true,\n        imageWidth: realWidth,\n        imageHeight: realHeight,\n        x1: 0,\n        y1: 0,\n        x2: xInit,\n        y2: yInit\n      };\n      if (flexHeight === false && flexWidth === false) {\n        imgSelectOptions.aspectRatio = xInit + ':' + yInit;\n      }\n      if (flexHeight === false) {\n        imgSelectOptions.maxHeight = yInit;\n      }\n      if (flexWidth === false) {\n        imgSelectOptions.maxWidth = xInit;\n      }\n      return imgSelectOptions;\n    },\n    onSelect: function () {\n      this.frame.setState('cropper');\n    },\n    onCropped: function (croppedImage) {\n      var url = croppedImage.url,\n        attachmentId = croppedImage.attachment_id,\n        w = croppedImage.width,\n        h = croppedImage.height;\n      this.setImageFromURL(url, attachmentId, w, h);\n    },\n    onSkippedCrop: function (selection) {\n      var url = selection.get('url'),\n        w = selection.get('width'),\n        h = selection.get('height');\n      this.setImageFromURL(url, selection.id, w, h);\n    },\n    setImageFromURL: function (url, attachmentId, width, height) {\n      var banner_profile_upload_status = false;\n      if ($(this.uploadBtn).hasClass('dokan-banner-drag')) {\n        var wrap = $(this.uploadBtn).closest('.dokan-banner');\n        wrap.find('input.dokan-file-field').val(attachmentId);\n        wrap.find('img.dokan-banner-img').attr('src', url);\n        $(this.uploadBtn).parent().siblings('.image-wrap', wrap).removeClass('dokan-hide');\n        $(this.uploadBtn).parent('.button-area').addClass('dokan-hide');\n        banner_profile_upload_status = true;\n      } else if ($(this.uploadBtn).hasClass('dokan-pro-gravatar-drag')) {\n        var wrap = $(this.uploadBtn).closest('.dokan-gravatar');\n        wrap.find('input.dokan-file-field').val(attachmentId);\n        wrap.find('img.dokan-gravatar-img').attr('src', url);\n        banner_profile_upload_status = true;\n        $(this.uploadBtn).parent().siblings('.gravatar-wrap', wrap).removeClass('dokan-hide');\n        $(this.uploadBtn).parent('.gravatar-button-area').addClass('dokan-hide');\n      }\n      if (banner_profile_upload_status === true) {\n        $(window).on(\"beforeunload\", function () {\n          return dokan.dokan_banner_added_alert_msg;\n        });\n        $(document).ready(function () {\n          $(\"#store-form\").on(\"submit\", function (e) {\n            $(window).off(\"beforeunload\");\n            return true;\n          });\n        });\n      }\n    },\n    removeImage: function () {\n      api.HeaderTool.currentHeader.trigger('hide');\n      api.HeaderTool.CombinedList.trigger('control:removeImage');\n    },\n    imageUpload: function (e) {\n      e.preventDefault();\n      var file_frame,\n        settings = Dokan_Settings;\n      settings.uploadBtn = this;\n      settings.frame = wp.media({\n        multiple: false,\n        button: {\n          text: dokan.selectAndCrop,\n          close: false\n        },\n        states: [new wp.media.controller.Library({\n          title: dokan.chooseImage,\n          library: wp.media.query({\n            type: 'image'\n          }),\n          multiple: false,\n          date: false,\n          priority: 20,\n          suggestedWidth: dokan.store_banner_dimension.width,\n          suggestedHeight: dokan.store_banner_dimension.height\n        }), new wp.media.controller.Cropper({\n          suggestedWidth: 5000,\n          imgSelectOptions: settings.calculateImageSelectOptions\n        })]\n      });\n      settings.frame.on('select', settings.onSelect, settings);\n      settings.frame.on('cropped', settings.onCropped, settings);\n      settings.frame.on('skippedcrop', settings.onSkippedCrop, settings);\n      settings.frame.open();\n    },\n    calculateImageSelectOptionsProfile: function (attachment, controller) {\n      var xInit = 150,\n        yInit = 150,\n        flexWidth = !!parseInt(dokan.store_banner_dimension['flex-width'], 10),\n        flexHeight = !!parseInt(dokan.store_banner_dimension['flex-height'], 10),\n        ratio,\n        xImg,\n        yImg,\n        realHeight,\n        realWidth,\n        imgSelectOptions;\n      realWidth = attachment.get('width');\n      realHeight = attachment.get('height');\n      this.headerImage = new api.HeaderTool.ImageModel();\n      this.headerImage.set({\n        themeWidth: xInit,\n        themeHeight: yInit,\n        themeFlexWidth: flexWidth,\n        themeFlexHeight: flexHeight,\n        imageWidth: realWidth,\n        imageHeight: realHeight\n      });\n      controller.set('canSkipCrop', !this.headerImage.shouldBeCropped());\n      ratio = xInit / yInit;\n      xImg = realWidth;\n      yImg = realHeight;\n      if (xImg / yImg > ratio) {\n        yInit = yImg;\n        xInit = yInit * ratio;\n      } else {\n        xInit = xImg;\n        yInit = xInit / ratio;\n      }\n      imgSelectOptions = {\n        handles: true,\n        keys: true,\n        instance: true,\n        persistent: true,\n        imageWidth: realWidth,\n        imageHeight: realHeight,\n        x1: 0,\n        y1: 0,\n        x2: xInit,\n        y2: yInit\n      };\n      if (flexHeight === false && flexWidth === false) {\n        imgSelectOptions.aspectRatio = xInit + ':' + yInit;\n      }\n      if (flexHeight === false) {\n        imgSelectOptions.maxHeight = yInit;\n      }\n      if (flexWidth === false) {\n        imgSelectOptions.maxWidth = xInit;\n      }\n      return imgSelectOptions;\n    },\n    simpleImageUpload: function (e) {\n      e.preventDefault();\n      var file_frame,\n        self = $(this);\n\n      // If the media frame already exists, reopen it.\n      if (file_frame) {\n        file_frame.open();\n        return;\n      }\n\n      // Create the media frame.\n      file_frame = wp.media.frames.file_frame = wp.media({\n        title: jQuery(this).data('uploader_title'),\n        button: {\n          text: jQuery(this).data('uploader_button_text')\n        },\n        multiple: false\n      });\n\n      // When an image is selected, run a callback.\n      file_frame.on('select', function () {\n        var attachment = file_frame.state().get('selection').first().toJSON();\n        var wrap = self.closest('.dokan-gravatar');\n        wrap.find('input.dokan-file-field').val(attachment.id);\n        wrap.find('img.dokan-gravatar-img').attr('src', attachment.url);\n        self.parent().siblings('.gravatar-wrap', wrap).removeClass('dokan-hide');\n        self.parent('.gravatar-button-area').addClass('dokan-hide');\n      });\n\n      // Finally, open the modal\n      file_frame.open();\n    },\n    gragatarImageUpload: function (e) {\n      e.preventDefault();\n      var file_frame,\n        settings = Dokan_Settings;\n      settings.uploadBtn = this;\n      settings.frame = wp.media({\n        multiple: false,\n        button: {\n          text: dokan.selectAndCrop,\n          close: false\n        },\n        states: [new wp.media.controller.Library({\n          title: dokan.chooseImage,\n          library: wp.media.query({\n            type: 'image'\n          }),\n          multiple: false,\n          date: false,\n          priority: 20,\n          suggestedWidth: 150,\n          suggestedHeight: 150\n        }), new wp.media.controller.Cropper({\n          imgSelectOptions: settings.calculateImageSelectOptionsProfile\n        })]\n      });\n      settings.frame.on('select', settings.onSelect, settings);\n      settings.frame.on('cropped', settings.onCropped, settings);\n      settings.frame.on('skippedcrop', settings.onSkippedCrop, settings);\n      settings.frame.open();\n    },\n    submitSettings: function (form_id) {\n      if (typeof tinyMCE != 'undefined') {\n        tinyMCE.triggerSave();\n      }\n      var self = $('form#' + form_id),\n        form_data = self.serialize() + '&action=dokan_settings&form_id=' + form_id;\n      var isDisconnect = false;\n      Dokan_Settings.handleRequest(self, form_data, isDisconnect);\n    },\n    handleRequest: function (self, form_data, isDisconnect) {\n      if (isDisconnect) {\n        self.find('.ajax_prev.disconnect').append('<span class=\"dokan-loading\"> </span>');\n      } else {\n        self.find('.ajax_prev.save').append('<span class=\"dokan-loading\"> </span>');\n      }\n      $('.dokan-update-setting-top-button span.dokan-loading').remove();\n      $('.dokan-update-setting-top-button').append('<span class=\"dokan-loading\"> </span>');\n      $.post(dokan.ajaxurl, form_data, function (resp) {\n        self.find('span.dokan-loading').remove();\n        $('.dokan-update-setting-top-button span.dokan-loading').remove();\n        $('html,body').animate({\n          scrollTop: $('.dokan-dashboard-header').offset().top\n        });\n        if (resp.success) {\n          // Harcoded Customization for template-settings function\n          $('.dokan-ajax-response').html($('<div/>', {\n            class: 'dokan-alert dokan-alert-success',\n            html: '<p>' + resp.data.msg + '</p>'\n          }));\n          $('.dokan-ajax-response').append(resp.data.progress);\n          if (dokan && dokan.storeProgressBar) {\n            dokan.storeProgressBar.init();\n          }\n          selectors = selectors.replaceAll('input', 'button');\n          if (isDisconnect) {\n            self.find(selectors).addClass('dokan-hide');\n          } else {\n            self.find(selectors).removeClass('dokan-hide');\n          }\n        } else {\n          $('.dokan-ajax-response').html($('<div/>', {\n            class: 'dokan-alert dokan-alert-danger',\n            html: '<p>' + resp.data + '</p>'\n          }));\n        }\n      });\n    },\n    validateForm: function (self) {\n      $('form#settings-form, form#profile-form, form#store-form, form#payment-form').validate({\n        //errorLabelContainer: '#errors'\n        submitHandler: function (form) {\n          self.submitSettings(form.getAttribute('id'));\n        },\n        errorElement: 'span',\n        errorClass: 'error',\n        errorPlacement: validatorError,\n        success: validatorSuccess,\n        ignore: '.select2-search__field, :hidden, .mapboxgl-ctrl-geocoder--input'\n      });\n    },\n    removeBanner: function (e) {\n      e.preventDefault();\n      var self = $(this);\n      var wrap = self.closest('.image-wrap');\n      var instruction = wrap.siblings('.button-area');\n      wrap.find('input.dokan-file-field').val('0');\n      wrap.addClass('dokan-hide');\n      instruction.removeClass('dokan-hide');\n    },\n    removeGravatar: function (e) {\n      e.preventDefault();\n      var self = $(this);\n      var wrap = self.closest('.gravatar-wrap');\n      var instruction = wrap.siblings('.gravatar-button-area');\n      wrap.find('input.dokan-file-field').val('0');\n      wrap.addClass('dokan-hide');\n      instruction.removeClass('dokan-hide');\n    }\n  };\n  var Dokan_Withdraw = {\n    init: function () {\n      var self = this;\n      this.withdrawValidate(self);\n    },\n    withdrawValidate: function (self) {\n      $('form.withdraw').validate({\n        //errorLabelContainer: '#errors'\n\n        errorElement: 'span',\n        errorClass: 'error',\n        errorPlacement: validatorError,\n        success: validatorSuccess\n      });\n    }\n  };\n  var Dokan_Seller = {\n    init: function () {\n      this.validate(this);\n    },\n    validate: function (self) {\n      $('form#dokan-form-contact-seller').validate({\n        errorPlacement: validatorError,\n        errorElement: 'span',\n        success: function (label, element) {\n          label.removeClass('error');\n          label.remove();\n        },\n        submitHandler: async function (form, event) {\n          event.preventDefault();\n          $(form).block({\n            message: null,\n            overlayCSS: {\n              background: '#fff url(' + dokan.ajax_loader + ') no-repeat center',\n              opacity: 0.6\n            }\n          });\n\n          // Run recaptcha executer\n          await dokan_execute_recaptcha('form#dokan-form-contact-seller .dokan_recaptcha_token', 'dokan_contact_seller_recaptcha');\n          var form_data = $(form).serialize();\n          $.post(dokan.ajaxurl, form_data, function (resp) {\n            $(form).unblock();\n            if (typeof resp.data !== 'undefined') {\n              $(form).find('.ajax-response').html(resp.data);\n            }\n            $(form).find('input[type=text], input[type=email], textarea, input[name=dokan_recaptcha_token]').val('').removeClass('valid');\n          });\n        }\n      });\n    }\n  };\n  $(function () {\n    Dokan_Settings.init();\n    Dokan_Withdraw.init();\n    Dokan_Seller.init();\n    $('.dokan-form-horizontal').on('change', 'input[type=checkbox]#lbl_setting_minimum_quantity', function () {\n      var showSWDiscount = $('.show_if_needs_sw_discount');\n      if ($(this).is(':checked')) {\n        showSWDiscount.find('input[type=\"number\"]').val('');\n        showSWDiscount.slideDown('slow');\n      } else {\n        showSWDiscount.slideUp('slow');\n      }\n    });\n  });\n})(jQuery);\n\n//localize Validation messages\n(function ($) {\n  var dokan_messages = DokanValidateMsg;\n  dokan_messages.maxlength = $.validator.format(dokan_messages.maxlength_msg);\n  dokan_messages.minlength = $.validator.format(dokan_messages.minlength_msg);\n  dokan_messages.rangelength = $.validator.format(dokan_messages.rangelength_msg);\n  dokan_messages.range = $.validator.format(dokan_messages.range_msg);\n  dokan_messages.max = $.validator.format(dokan_messages.max_msg);\n  dokan_messages.min = $.validator.format(dokan_messages.min_msg);\n  $.validator.messages = dokan_messages;\n  $(document).on('click', '#dokan_store_tnc_enable', function (e) {\n    if ($(this).is(':checked')) {\n      $('#dokan_tnc_text').show();\n    } else {\n      $('#dokan_tnc_text').hide();\n    }\n  }).ready(function (e) {\n    if ($('#dokan_store_tnc_enable').is(':checked')) {\n      $('#dokan_tnc_text').show();\n    } else {\n      $('#dokan_tnc_text').hide();\n    }\n  });\n})(jQuery);\n(function ($) {\n  var hasSelectiveRefresh = 'undefined' !== typeof wp && wp.customize && wp.customize.selectiveRefresh;\n  function resize_dummy_image() {\n    var width = dokan.store_banner_dimension.width,\n      height = dokan.store_banner_dimension.height / dokan.store_banner_dimension.width * $('#dokan-content').width();\n    $('.dokan-profile-frame-wrapper .profile-info-img.dummy-image').css({\n      height: height\n    });\n  }\n  resize_dummy_image();\n  $(window).on('resize', function (e) {\n    resize_dummy_image();\n  });\n  if (hasSelectiveRefresh) {\n    wp.customize.selectiveRefresh.bind('partial-content-rendered', function (placement) {\n      console.log('placement', placement);\n      if (placement.partial.id === 'store_header_template') {\n        resize_dummy_image();\n      }\n    });\n  }\n\n  // Ajax product search box\n  $(':input.dokan-product-search').filter(':not(.enhanced)').each(function () {\n    var select2_args = {\n      allowClear: $(this).data('allow_clear') ? true : false,\n      placeholder: $(this).data('placeholder'),\n      minimumInputLength: $(this).data('minimum_input_length') ? $(this).data('minimum_input_length') : '3',\n      escapeMarkup: function (m) {\n        return m;\n      },\n      language: {\n        errorLoading: function () {\n          // Workaround for https://github.com/select2/select2/issues/4355 instead of i18n_ajax_error.\n          return dokan.i18n_searching;\n        },\n        inputTooLong: function (args) {\n          var overChars = args.input.length - args.maximum;\n          if (1 === overChars) {\n            return dokan.i18n_input_too_long_1;\n          }\n          return dokan.i18n_input_too_long_n.replace('%qty%', overChars);\n        },\n        inputTooShort: function (args) {\n          var remainingChars = args.minimum - args.input.length;\n          if (1 === remainingChars) {\n            return dokan.i18n_input_too_short_1;\n          }\n          return dokan.i18n_input_too_short_n.replace('%qty%', remainingChars);\n        },\n        loadingMore: function () {\n          return dokan.i18n_load_more;\n        },\n        maximumSelected: function (args) {\n          if (args.maximum === 1) {\n            return dokan.i18n_selection_too_long_1;\n          }\n          return dokan.i18n_selection_too_long_n.replace('%qty%', args.maximum);\n        },\n        noResults: function () {\n          return dokan.i18n_no_matches;\n        },\n        searching: function () {\n          return dokan.i18n_searching;\n        }\n      },\n      ajax: {\n        url: dokan.ajaxurl,\n        dataType: 'json',\n        delay: 250,\n        data: function (params) {\n          return {\n            term: params.term,\n            action: $(this).data('action') || 'dokan_json_search_products_and_variations',\n            security: dokan.search_products_nonce,\n            exclude: $(this).data('exclude'),\n            user_ids: $(this).data('user_ids'),\n            include: $(this).data('include'),\n            limit: $(this).data('limit')\n          };\n        },\n        processResults: function (data) {\n          var terms = [];\n          if (data) {\n            $.each(data, function (id, text) {\n              terms.push({\n                id: id,\n                text: text\n              });\n            });\n          }\n          return {\n            results: terms\n          };\n        },\n        cache: true\n      }\n    };\n\n    // select2_args = $.extend( select2_args, {} );\n\n    $(this).select2(select2_args).addClass('enhanced');\n    if ($(this).data('sortable')) {\n      var $select = $(this);\n      var $list = $(this).next('.select2-container').find('ul.select2-selection__rendered');\n      $list.sortable({\n        placeholder: 'ui-state-highlight select2-selection__choice',\n        forcePlaceholderSize: true,\n        items: 'li:not(.select2-search__field)',\n        tolerance: 'pointer',\n        stop: function () {\n          $($list.find('.select2-selection__choice').get().reverse()).each(function () {\n            var id = $(this).data('data').id;\n            var option = $select.find('option[value=\"' + id + '\"]')[0];\n            $select.prepend(option);\n          });\n        }\n      });\n    }\n  });\n\n  /**\n   * Trigger bulk item checkbox selections\n   */\n  var bulkItemsSelection = {\n    init: function () {\n      selected_items = [];\n      $('#cb-select-all').on('change', function (e) {\n        var self = $(this);\n        var item_id = $('.cb-select-items');\n        if (self.is(':checked')) {\n          item_id.each(function (key, value) {\n            var item = $(value);\n            item.prop('checked', 'checked');\n          });\n        } else {\n          item_id.each(function (key, value) {\n            $(value).prop('checked', '');\n            selected_items.pop();\n          });\n        }\n      });\n    }\n  };\n  bulkItemsSelection.init();\n})(jQuery);\n(function ($) {\n  // Field validation error tips\n  $(document.body).on('wc_add_error_tip', function (e, element, error_type) {\n    var offset = element.position();\n    if (element.parent().find('.wc_error_tip').length === 0) {\n      element.after('<div class=\"wc_error_tip ' + error_type + '\">' + dokan[error_type] + '</div>');\n      element.parent().find('.wc_error_tip').css('left', offset.left + element.width() - element.width() / 2 - $('.wc_error_tip').width() / 2).css('top', offset.top + element.height()).fadeIn('100');\n    }\n  }).on('wc_remove_error_tip', function (e, element, error_type) {\n    element.parent().find('.wc_error_tip.' + error_type).fadeOut('100', function () {\n      $(this).remove();\n    });\n  }).on('click', function () {\n    $('.wc_error_tip').fadeOut('100', function () {\n      $(this).remove();\n    });\n  }).on('blur', '.wc_input_decimal[type=text], .wc_input_price[type=text], .wc_input_country_iso[type=text]', function () {\n    $('.wc_error_tip').fadeOut('100', function () {\n      $(this).remove();\n    });\n  }).on('change', '.wc_input_price[type=text], .wc_input_decimal[type=text], .wc-order-totals #refund_amount[type=text]', function () {\n    var regex,\n      decimalRegex,\n      decimailPoint = dokan.decimal_point;\n    if ($(this).is('.wc_input_price') || $(this).is('#refund_amount')) {\n      decimailPoint = dokan.mon_decimal_point;\n    }\n    regex = new RegExp('[^-0-9%\\\\' + decimailPoint + ']+', 'gi');\n    decimalRegex = new RegExp('\\\\' + decimailPoint + '+', 'gi');\n    var value = $(this).val();\n    var newvalue = value.replace(regex, '').replace(decimalRegex, decimailPoint);\n    if (value !== newvalue) {\n      $(this).val(newvalue);\n    }\n  }).on('keyup',\n  // eslint-disable-next-line max-len\n  '.wc_input_price[type=text], .wc_input_decimal[type=text], .wc_input_country_iso[type=text], .wc-order-totals #refund_amount[type=text]', function () {\n    var regex, error, decimalRegex;\n    var checkDecimalNumbers = false;\n    if ($(this).is('.wc_input_price') || $(this).is('#refund_amount')) {\n      checkDecimalNumbers = true;\n      regex = new RegExp('[^-0-9%\\\\' + dokan.mon_decimal_point + ']+', 'gi');\n      decimalRegex = new RegExp('[^\\\\' + dokan.mon_decimal_point + ']', 'gi');\n      error = 'i18n_mon_decimal_error';\n    } else if ($(this).is('.wc_input_country_iso')) {\n      regex = new RegExp('([^A-Z])+|(.){3,}', 'im');\n      error = 'i18n_country_iso_error';\n    } else {\n      checkDecimalNumbers = true;\n      regex = new RegExp('[^-0-9%\\\\' + dokan.decimal_point + ']+', 'gi');\n      decimalRegex = new RegExp('[^\\\\' + dokan.decimal_point + ']', 'gi');\n      error = 'i18n_decimal_error';\n    }\n    var value = $(this).val();\n    var newvalue = value.replace(regex, '');\n\n    // Check if newvalue have more than one decimal point.\n    if (checkDecimalNumbers && 1 < newvalue.replace(decimalRegex, '').length) {\n      newvalue = newvalue.replace(decimalRegex, '');\n    }\n    if (value !== newvalue) {\n      $(document.body).triggerHandler('wc_add_error_tip', [$(this), error]);\n    } else {\n      $(document.body).triggerHandler('wc_remove_error_tip', [$(this), error]);\n    }\n  }).on('change', '#_sale_price.wc_input_price[type=text], .wc_input_price[name^=variable_sale_price], #_subscription_sale_price.wc_input_price[type=text]', function () {\n    var sale_price_field = $(this),\n      product_type_selector = $('#product_type'),\n      regular_price_field;\n    if (sale_price_field.attr('name').indexOf('variable') !== -1) {\n      regular_price_field = sale_price_field.parents('.variable_pricing').find('.wc_input_price[name^=variable_regular_price]');\n    } else if (product_type_selector.length && 'subscription' === product_type_selector.find(':selected').val()) {\n      regular_price_field = $('#_subscription_price');\n    } else {\n      regular_price_field = $('#_regular_price');\n    }\n    var sale_price = parseFloat(window.accounting.unformat(sale_price_field.val(), dokan.mon_decimal_point));\n    var regular_price = parseFloat(window.accounting.unformat(regular_price_field.val(), dokan.mon_decimal_point));\n    if (sale_price >= regular_price) {\n      $(this).val('');\n    }\n  }).on('keyup', '#_sale_price.wc_input_price[type=text], .wc_input_price[name^=variable_sale_price], #_subscription_sale_price.wc_input_price[type=text]', function () {\n    var sale_price_field = $(this),\n      product_type_selector = $('#product_type'),\n      regular_price_field;\n    if (sale_price_field.attr('name').indexOf('variable') !== -1) {\n      regular_price_field = sale_price_field.parents('.variable_pricing').find('.wc_input_price[name^=variable_regular_price]');\n    } else if (product_type_selector.length && 'subscription' === product_type_selector.find(':selected').val()) {\n      regular_price_field = $('#_subscription_price');\n    } else {\n      regular_price_field = $('#_regular_price');\n    }\n    var sale_price = parseFloat(window.accounting.unformat(sale_price_field.val(), dokan.mon_decimal_point));\n    var regular_price = parseFloat(window.accounting.unformat(regular_price_field.val(), dokan.mon_decimal_point));\n    if (sale_price >= regular_price) {\n      $(document.body).triggerHandler('wc_add_error_tip', [$(this), 'i18n_sale_less_than_regular_error']);\n    } else {\n      $(document.body).triggerHandler('wc_remove_error_tip', [$(this), 'i18n_sale_less_than_regular_error']);\n    }\n  }).on('init_tooltips', function () {\n    $('.tips, .help_tip, .woocommerce-help-tip').tipTip({\n      attribute: 'data-tip',\n      fadeIn: 50,\n      fadeOut: 50,\n      delay: 200\n    });\n    $('.column-wc_actions .wc-action-button').tipTip({\n      fadeIn: 50,\n      fadeOut: 50,\n      delay: 200\n    });\n\n    // Add tiptip to parent element for widefat tables\n    $('.parent-tips').each(function () {\n      $(this).closest('a, th').attr('data-tip', $(this).data('tip')).tipTip({\n        attribute: 'data-tip',\n        fadeIn: 50,\n        fadeOut: 50,\n        delay: 200\n      }).css('cursor', 'help');\n    });\n  });\n\n  // Submenu navigation on vendor dashboard\n  $('#dokan-navigation .dokan-dashboard-menu li.has-submenu:not(.active)').on('mouseover', e => {\n    dokanNavigateSubmenu(e);\n  }).on('mouseout', e => {\n    dokanNavigateSubmenu(e, true);\n  });\n\n  /**\n   * Navigates submenu on hovering the parent menu.\n   *\n   * @param {event}   evt  The dom event\n   * @param {boolean} hide Hide or show sub menu\n   *\n   * @return {void}\n   */\n  function dokanNavigateSubmenu(evt, hide) {\n    const elem = $(evt.target).closest('li.has-submenu');\n    elem.find('.navigation-submenu').each((index, subElem) => {\n      if (!hide) {\n        elem.addClass('submenu-hovered');\n        let elemRect = elem[0].getBoundingClientRect(),\n          subElemRect = subElem.getBoundingClientRect(),\n          dashboard = $('.dokan-dashboard-wrap'),\n          dashboardRect = dashboard[0].getBoundingClientRect(),\n          dashboardHeight = Math.min(dashboardRect.bottom, dashboardRect.height);\n        if (dashboardHeight < subElemRect.height) {\n          let extendedHeight = subElemRect.height - dashboardHeight;\n          if (elemRect.top < elemRect.height) {\n            extendedHeight += elemRect.top;\n          }\n          dashboard.css('height', dashboardRect.height + extendedHeight);\n        } else {\n          dashboard.css('height', '');\n        }\n        if (elemRect.top < elemRect.height) {\n          $(subElem).css('bottom', 'unset');\n          $(subElem).css('top', 0);\n        } else {\n          $(subElem).css('top', 'unset');\n          let dist = elemRect.top - subElemRect.height;\n          if (dist > 0) {\n            $(subElem).css('bottom', 0);\n            subElemRect = subElem.getBoundingClientRect();\n            if (subElemRect.top < 0) {\n              $(subElem).css('bottom', 'unset');\n              $(subElem).css('top', 0);\n            }\n          } else {\n            $(subElem).css('bottom', dist);\n            let navRect = $('.dokan-dash-sidebar')[0].getBoundingClientRect(),\n              navElderSiblingRect = $('.entry-header')[0].getBoundingClientRect();\n            subElemRect = subElem.getBoundingClientRect();\n            if (subElemRect.bottom > navRect.bottom) {\n              dist += subElemRect.bottom - navRect.bottom;\n            } else if (subElemRect.bottom - navElderSiblingRect.bottom < subElemRect.height) {\n              dist += subElemRect.bottom - navElderSiblingRect.bottom - subElemRect.height - 20;\n            }\n            $(subElem).css('bottom', dist);\n          }\n        }\n      } else {\n        elem.removeClass('submenu-hovered');\n        $('.dokan-dashboard-wrap').css('height', '');\n        $(subElem).css('bottom', 0);\n        $(subElem).removeAttr('style');\n      }\n    });\n  }\n})(jQuery);\n/**\n * Show Delete Button Prompt\n *\n * @param {object} event\n * @param {string} messgae\n *\n * @returns boolean\n */\nwindow.dokan_show_delete_prompt = async function (event, messgae) {\n  event.preventDefault();\n  let answer = await dokan_sweetalert(messgae, {\n    action: 'confirm',\n    icon: 'warning'\n  });\n  if (answer.isConfirmed && undefined !== event.target.href) {\n    window.location.href = event.target.href;\n  } else if (answer.isConfirmed && undefined !== event.target.dataset.url) {\n    window.location.href = event.target.dataset.url;\n  } else {\n    return false;\n  }\n};\n\n/**\n * Shows bulk action delete operation confirmation\n *\n * @param {object} event\n * @param {string} message\n * @param {string} inputSelector\n * @param {string} formSelector\n */\nwindow.dokan_bulk_delete_prompt = async function (event, message, inputSelector, formSelector) {\n  if ('delete' === jQuery(inputSelector).val()) {\n    // only prevent default if action is delete\n    event.preventDefault();\n    let answer = await dokan_sweetalert(message, {\n      action: 'confirm',\n      icon: 'warning'\n    });\n    if (answer.isConfirmed) {\n      jQuery(formSelector).submit();\n    }\n  }\n};\n\n//# sourceURL=webpack://dokan/./assets/src/js/script.js?");

/***/ }),

/***/ "./assets/src/js/store-lists.js":
/*!**************************************!*\
  !*** ./assets/src/js/store-lists.js ***!
  \**************************************/
/***/ (() => {

eval(";\n(function ($) {\n  var storeLists = {\n    /**\n     * Query holder\n     *\n     * @type object\n     */\n    query: {},\n    /**\n     * Form holder\n     *\n     * @type object\n     */\n    form: null,\n    /**\n     * Category item string holder\n     *\n     * @type array\n     */\n    cateItemStringArray: [],\n    /**\n     * Init all the methods\n     *\n     * @return void\n     */\n    init: function () {\n      $('#dokan-store-listing-filter-wrap .sort-by #stores_orderby').on('change', this.buildSortByQuery);\n      $('#dokan-store-listing-filter-wrap .toggle-view span').on('click', this.toggleView);\n      $('#dokan-store-listing-filter-wrap .dokan-store-list-filter-button, #dokan-store-listing-filter-wrap .dokan-icons, #dokan-store-listing-filter-form-wrap .apply-filter #cancel-filter-btn ').on('click', this.toggleForm);\n\n      // Build query string\n      $('#dokan-store-listing-filter-form-wrap .store-search-input').on('change', this.buildSearchQuery);\n\n      // Submit the form\n      $('#dokan-store-listing-filter-form-wrap .apply-filter #apply-filter-btn').on('click', this.submitForm);\n      this.maybeHideListView();\n      const self = storeLists;\n      self.form = document.forms.dokan_store_lists_filter_form;\n      const view = self.getLocal('dokan-layout');\n      if (view) {\n        const toggleBtns = $('.toggle-view span');\n        self.setView(view, toggleBtns);\n      }\n      const params = self.getParams();\n      if (params.length) {\n        let openTheForm = false;\n        params.forEach(function (param) {\n          const keys = Object.keys(param);\n          const values = Object.values(param);\n          if (!keys.includes('stores_orderby') || params.length > 1) {\n            openTheForm = true;\n          }\n          self.setParams(keys, values);\n        });\n        if (openTheForm) {\n          $('#dokan-store-listing-filter-form-wrap').slideToggle();\n        }\n      }\n      if ($(\"#dokan-store-listing-filter-form-wrap\").length) {\n        $('.store-search-input').on('keypress', function (e) {\n          var key = e.which;\n          if (key == 13) {\n            $(\"#dokan-store-listing-filter-form-wrap\").submit();\n            return false;\n          }\n        });\n      }\n      $('body').on('click', function (evt) {\n        if (!$(evt.target).is('div#dokan-store-products-search-result li')) {\n          $(\"#dokan-store-products-search-result\").html('');\n          $('#dokan-store-products-search-result').removeClass('dokan-store-products-search-has-results');\n        }\n      });\n      $('body').on('keyup', '.dokan-store-products-filter-search', dokan_debounce_delay(function (evt) {\n        evt.preventDefault();\n        var self = $(this);\n        var search_term = self.val();\n        var store_id = self.data('store_id');\n        if (!search_term) {\n          return;\n        }\n        $('.dokan-store-products-filter-search').addClass('dokan-ajax-search-loader');\n        $('#dokan-store-products-search-result').removeClass('dokan-store-products-search-has-results');\n        $('#dokan-store-products-search-result').hide();\n        $(\"#dokan-store-products-search-result\").html('');\n        jQuery.ajax({\n          type: \"post\",\n          dataType: \"json\",\n          url: dokan.ajaxurl,\n          data: {\n            search_term: search_term,\n            store_id: store_id,\n            _wpnonce: dokan.store_product_search_nonce,\n            action: 'dokan_store_product_search_action'\n          },\n          success: function (response) {\n            $('.dokan-store-products-filter-search').removeClass('dokan-ajax-search-loader');\n            $(\"#dokan-store-products-search-result\").show();\n            $('#dokan-store-products-search-result').addClass('dokan-store-products-search-has-results');\n            if (response.type == 'success') {\n              $(\"#dokan-store-products-search-result\").html('<ul>' + response.data_list + '</ul>');\n            } else {\n              $(\"#dokan-store-products-search-result\").html('<ul class=\"dokan-store-product-results-not-found\">' + response.data_list + '</ul>');\n            }\n          }\n        });\n      }, 500));\n    },\n    buildSortByQuery: function (event) {\n      const self = storeLists;\n      self.query.stores_orderby = event.target.value;\n      self.submitForm(event);\n    },\n    /**\n     * Toggle store layout view\n     *\n     * @param  string event\n     *\n     * @return void\n     */\n    toggleView: function (event) {\n      const self = storeLists;\n      const currentElement = $(event.target);\n      const elements = currentElement.parent().find('span');\n      const view = currentElement.data('view');\n      self.setView(view, elements);\n      self.setLocal('dokan-layout', view);\n    },\n    /**\n     * Set grid or list view\n     *\n     * @param string view\n     * @param array elements\n     *\n     * @return void\n     */\n    setView: function (view, elements) {\n      if (typeof view === 'undefined' || view.length < 1 || typeof elements === 'undefined' || elements.length < 1) {\n        return;\n      }\n      const listingWrap = $('#dokan-seller-listing-wrap');\n      [...elements].forEach(function (value) {\n        const element = $(value);\n        if (view === element.data('view')) {\n          element.addClass('active');\n          listingWrap.addClass(view);\n        } else {\n          element.removeClass('active');\n          listingWrap.removeClass(element.data('view'));\n        }\n      });\n    },\n    /**\n     * Toggle form\n     *\n     * @param  string event\n     *\n     * @return void\n     */\n    toggleForm: function (event) {\n      event.preventDefault();\n      $('#dokan-store-listing-filter-form-wrap').slideToggle();\n    },\n    /**\n     * Build Search Query\n     *\n     * @param  string event\n     *\n     * @return void\n     */\n    buildSearchQuery: function (event) {\n      if (event.target.value) {\n        storeLists.query.dokan_seller_search = event.target.value;\n      } else {\n        delete storeLists.query.dokan_seller_search;\n      }\n    },\n    /**\n     * Submit the form\n     *\n     * @param  string event\n     *\n     * @return void\n     */\n    submitForm: function (event) {\n      event.preventDefault();\n\n      // check if nonce exists on storeLists.query\n      if (storeLists.query._store_filter_nonce) {\n        delete storeLists.query._store_filter_nonce;\n      }\n      storeLists.query._store_filter_nonce = $('input[name=\"_store_filter_nonce\"]').first().val();\n      const queryString = decodeURIComponent($.param(storeLists.query));\n      const target = '/page';\n      const pathName = window.location.pathname;\n      const path = pathName.includes(target) ? pathName.substr(0, pathName.indexOf(target)) : '';\n      window.history.pushState(null, null, `${path}?${queryString}`);\n      window.location.reload();\n    },\n    /**\n     * Add data into local storage\n     *\n     * @param string key\n     * @param mix value\n     *\n     * @return void\n     */\n    setLocal: function (key, value) {\n      window.localStorage.setItem(key, value);\n    },\n    /**\n     * Get data from local storage\n     *\n     * @param  string key\n     *\n     * @return mix\n     */\n    getLocal: function (key) {\n      return window.localStorage.getItem(key);\n    },\n    setParams: function (key, value) {\n      const self = storeLists;\n      const elements = self.form ? self.form.elements : '';\n      const sortingForm = document.forms.stores_sorting;\n      const sortingFormElements = sortingForm ? sortingForm.elements : '';\n      Object.values(sortingFormElements).forEach(function (element) {\n        if (element.name === key[0]) {\n          $(element).val(value[0]);\n        }\n      });\n\n      // on reload, if query string exists, set the form input elment value\n      Object.values(elements).forEach(function (element) {\n        if (key.includes(element.name)) {\n          if (element.type === 'checkbox') {\n            element.checked = ['yes', 'true', '1'].includes(value[0]) ? true : false;\n          } else if (['text', 'search'].includes(element.type)) {\n            element.value = value[0];\n          }\n        }\n\n        // for backward compatibility we'll allow `store_category[]` query_var.\n        if (key[0].includes('store_categories[') || key[0].includes('store_category[')) {\n          const trimedValue = value[0].split(' ').join('-');\n          const cateItem = $(`[data-slug=${trimedValue}]`);\n          if (!self.cateItemStringArray.includes(cateItem.text().trim())) {\n            self.cateItemStringArray.push(cateItem.text().trim());\n          }\n          cateItem.addClass('dokan-btn-theme');\n        } else if (key[0] === 'rating') {\n          const trimedValue = value[0].split(' ').join('-');\n          $(`[data-${key[0]}=${trimedValue}]`).addClass('active');\n          $(`[data-rating=${trimedValue}]`).parent().addClass('selected');\n        }\n      });\n      key.forEach(function (param, index) {\n        if (!param.includes('[')) {\n          self.query[param] = value[index];\n        }\n      });\n    },\n    /**\n     * Get params from\n     *\n     * @return array\n     */\n    getParams: function () {\n      const params = new URLSearchParams(location.search);\n      const allParams = [];\n      params.forEach(function (value, key) {\n        allParams.push({\n          [key]: value\n        });\n      });\n      return allParams;\n    },\n    /**\n     * On mobile screen hide the grid, list view button\n     *\n     * @return void\n     */\n    maybeHideListView: function () {\n      const self = storeLists;\n      if (window.matchMedia('(max-width: 767px)').matches) {\n        if ('list-view' === self.getLocal('dokan-layout')) {\n          self.setLocal('dokan-layout', 'grid-view');\n        }\n      }\n      $(window).on('resize', function () {\n        const container = $(this);\n        if (container.width() < 767) {\n          $('#dokan-seller-listing-wrap').removeClass('list-view');\n          $('#dokan-seller-listing-wrap').addClass('grid-view');\n        } else {\n          $('.toggle-view.item span').last().removeClass('active');\n          $('.toggle-view.item span').first().addClass('active');\n        }\n      });\n    }\n  };\n  if (window.dokan) {\n    window.dokan.storeLists = storeLists;\n    window.dokan.storeLists.init();\n  }\n  function dokan_debounce_delay(callback, ms) {\n    var timer = 0;\n    return function () {\n      var context = this,\n        args = arguments;\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        callback.apply(context, args);\n      }, ms || 0);\n    };\n  }\n})(jQuery);\n\n//# sourceURL=webpack://dokan/./assets/src/js/store-lists.js?");

/***/ }),

/***/ "./assets/src/js/withdraw.js":
/*!***********************************!*\
  !*** ./assets/src/js/withdraw.js ***!
  \***********************************/
/***/ (() => {

eval(";\n($ => {\n  const Dokan_Withdraw = {\n    init: () => {\n      $('#dokan-request-withdraw-button').on('click', e => {\n        e.preventDefault();\n        Dokan_Withdraw.openRequestWithdrawWindow();\n      });\n      $('.dokan-withdraw-make-default-button').on('click', e => {\n        e.preventDefault();\n        Dokan_Withdraw.makeDefault(e);\n      });\n      $('#dokan-withdraw-display-schedule-popup').on('click', e => {\n        Dokan_Withdraw.opensScheduleWindow(e);\n      });\n      $('#dokan-withdraw-schedule-request-submit').on('click', e => {\n        Dokan_Withdraw.handleScheduleChangeRequest(e);\n      });\n      $(\"input[name='withdraw-schedule']\").on('change', e => {\n        Dokan_Withdraw.handleScheduleChange(e);\n      });\n      Dokan_Withdraw.initModal();\n    },\n    withdrawTemplate: '',\n    withdrawModal: '',\n    loadModalTemplate: function () {\n      if (!Dokan_Withdraw.withdrawTemplate && $('#tmpl-withdraw-request-popup').length) {\n        const template = window.wp.template('withdraw-request-popup');\n        Dokan_Withdraw.withdrawTemplate = template();\n      }\n    },\n    initModal: function () {\n      Dokan_Withdraw.loadModalTemplate();\n      const modal = $('#dokan-withdraw-request-popup').iziModal({\n        width: 690,\n        overlayColor: 'rgba(0, 0, 0, 0.8)',\n        headerColor: dokan.modal_header_color,\n        onOpening: function (modal) {\n          Dokan_Withdraw.calculateWithdrawCharges();\n        }\n      });\n      modal.iziModal('setContent', Dokan_Withdraw.withdrawTemplate);\n      $(\"[name='withdraw_method'][id='withdraw-method']\").on('change', e => {\n        Dokan_Withdraw.calculateWithdrawCharges();\n      });\n      $('input#withdraw-amount').on('keyup', Dokan_Withdraw.debounce(Dokan_Withdraw.calculateWithdrawCharges, 500));\n      $('#dokan-withdraw-request-submit').on('click', e => {\n        Dokan_Withdraw.handleWithdrawRequest(e);\n      });\n      Dokan_Withdraw.withdrawModal = modal;\n    },\n    debounce(func, wait, immediate) {\n      var timeout;\n      return function () {\n        var context = this,\n          args = arguments;\n        var later = function () {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    },\n    openRequestWithdrawWindow: () => {\n      Dokan_Withdraw.withdrawModal.iziModal('open');\n    },\n    opensScheduleWindow: () => {\n      const scheduleTemplate = wp.template('withdraw-schedule-popup'),\n        modal = $('#dokan-withdraw-schedule-popup').iziModal({\n          width: 690,\n          overlayColor: 'rgba(0, 0, 0, 0.8)',\n          headerColor: dokan.modal_header_color\n        });\n      modal.iziModal('setContent', scheduleTemplate().trim());\n      modal.iziModal('open');\n      Dokan_Withdraw.init();\n    },\n    makeDefault: e => {\n      const button = $(e.target);\n      const paymentArea = $('#dokan-withdraw-payment-method-list');\n      paymentArea.block({\n        message: null,\n        overlayCSS: {\n          background: '#fff',\n          opacity: 0.6\n        }\n      });\n      $.post(dokan.ajaxurl, {\n        action: 'dokan_withdraw_handle_make_default_method',\n        nonce: paymentArea.data('security'),\n        method: button.data('method')\n      }, response => {\n        if (response.success) {\n          dokan_sweetalert(response.data, {\n            position: 'bottom-end',\n            toast: true,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n            timerProgressBar: true\n          });\n          paymentArea.unblock();\n          window.location.reload();\n        } else {\n          dokan_sweetalert(response.data, {\n            position: 'bottom-end',\n            toast: true,\n            icon: 'error',\n            showConfirmButton: false,\n            timer: 2000,\n            timerProgressBar: true\n          });\n          paymentArea.unblock();\n        }\n      });\n    },\n    handleWithdrawRequest: e => {\n      e.preventDefault();\n      const amount = $('input#withdraw-amount').val();\n      const nonce = $('input#dokan_withdraw_nonce').val();\n      const form = $('#withdraw-request-popup');\n      const method = $('#withdraw-method').val();\n      form.block({\n        message: null,\n        overlayCSS: {\n          background: '#fff',\n          opacity: 0.6\n        }\n      });\n      $.post(dokan.ajaxurl, {\n        action: 'dokan_handle_withdraw_request',\n        _handle_withdraw_request: nonce,\n        amount: amount,\n        method: method\n      }, async response => {\n        if (response.success) {\n          await dokan_sweetalert(response.data, {\n            position: 'bottom-end',\n            toast: true,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n            timerProgressBar: true,\n            didOpen: toast => {\n              setTimeout(function () {\n                form.unblock();\n                window.location.reload();\n              }, 2000);\n            }\n          });\n        } else {\n          dokan_sweetalert('', {\n            icon: 'error',\n            html: response.data\n          });\n          form.unblock();\n        }\n      });\n    },\n    handleScheduleChangeRequest: e => {\n      e.preventDefault();\n      const schedule = $(\"input[name='withdraw-schedule']:checked\").val();\n      const nonce = $('#dokan-withdraw-schedule-request-submit').data('security');\n      const form = $('#withdraw-schedule-popup');\n      const reserve = $('#withdraw-remaining-amount').val();\n      const minimum = $('#minimum-withdraw-amount').val();\n      const method = $('#preferred-payment-method').val();\n      form.block({\n        message: null,\n        overlayCSS: {\n          background: '#fff',\n          opacity: 0.6\n        }\n      });\n      $.post(dokan.ajaxurl, {\n        action: 'dokan_handle_withdraw_schedule_change_request',\n        nonce: nonce,\n        schedule: schedule,\n        reserve: reserve,\n        minimum: minimum,\n        method: method\n      }, response => {\n        if (response.success) {\n          dokan_sweetalert(response.data, {\n            position: 'bottom-end',\n            toast: true,\n            icon: 'success',\n            showConfirmButton: false,\n            timer: 2000,\n            timerProgressBar: true\n          });\n          form.unblock();\n          window.location.reload();\n        } else {\n          dokan_sweetalert('', {\n            icon: 'error',\n            html: response.data\n          });\n          form.unblock();\n        }\n      });\n    },\n    handleScheduleChange: e => {\n      const nextDate = $(e.target).data('next-schedule');\n      $('#dokan-withdraw-next-scheduled-date').html(nextDate);\n    },\n    calculateWithdrawCharges: () => {\n      let charges = $(\"select[name='withdraw_method'][id='withdraw-method'] option:selected\").data();\n      if ($('#dokan-send-withdraw-request-popup-form > .dokan-alert-danger').length || !charges) {\n        return;\n      }\n      let withdrawMethod = $(\"[name='withdraw_method'][id='withdraw-method']\").val();\n      let withdrawAmount = $(\"[name='withdraw_amount'][id='withdraw-amount']\").val();\n      withdrawAmount = accounting.unformat(withdrawAmount, dokan.mon_decimal_point);\n      let {\n        chargePercentage,\n        chargeFixed\n      } = $(\"select[name='withdraw_method'][id='withdraw-method'] option:selected\").data();\n      let chargeAmount = 0;\n      let chargeText = '';\n      if (chargeFixed) {\n        chargeText += Dokan_Withdraw.formatMoney(chargeFixed);\n        chargeAmount += chargeFixed;\n      }\n      if (chargePercentage) {\n        let percentageAmount = chargePercentage / 100 * withdrawAmount;\n        chargeAmount += percentageAmount;\n        chargeText += chargeText ? ' + ' : '';\n        chargeText += parseFloat(accounting.formatNumber(chargePercentage, dokan.rounding_precision, '')).toString().replace('.', dokan.mon_decimal_point) + '%';\n        chargeText += ` = ${Dokan_Withdraw.formatMoney(chargeAmount)}`;\n      }\n      if (!chargeText) {\n        chargeText = Dokan_Withdraw.formatMoney(chargeAmount, dokan.currency);\n      }\n      Dokan_Withdraw.showWithdrawChargeHtml(chargeText, chargeAmount, withdrawAmount);\n    },\n    formatMoney(money) {\n      return accounting.formatMoney(money, {\n        symbol: dokan.currency_format_symbol,\n        decimal: dokan.currency_format_decimal_sep,\n        thousand: dokan.currency_format_thousand_sep,\n        precision: dokan.currency_format_num_decimals,\n        format: dokan.currency_format\n      });\n    },\n    showWithdrawChargeHtml(chargeText, chargeAmount, withdrawAmount) {\n      let chargeSection = $('#dokan-withdraw-charge-section');\n      let revivableSection = $('#dokan-withdraw-revivable-section');\n      $('#dokan-withdraw-charge-section-text').html(chargeText);\n      $('#dokan-withdraw-revivable-section-text').html(Dokan_Withdraw.formatMoney(withdrawAmount - chargeAmount));\n      chargeSection.show();\n      revivableSection.show();\n    }\n  };\n  $(document).ready(function () {\n    Dokan_Withdraw.init();\n  });\n})(jQuery);\n\n//# sourceURL=webpack://dokan/./assets/src/js/withdraw.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./assets/src/js/orders.js"]();
/******/ 	__webpack_modules__["./assets/src/js/product-editor.js"]();
/******/ 	__webpack_modules__["./assets/src/js/script.js"]();
/******/ 	__webpack_modules__["./assets/src/js/store-lists.js"]();
/******/ 	__webpack_modules__["./assets/src/js/withdraw.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./assets/src/js/dokan-daterangepicker.js"]();
/******/ 	
/******/ })()
;
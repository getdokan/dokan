{
  "env": {
    // "browser": true,
    "es2021": true
    // "node": true 
    // "commonjs": true,
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
    // "plugin:playwright/playwright-test/recommended",
    // "prettier"
],
"parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "prettier"
],
  "rules": {
      // we want single quotes
      "quotes": ["error", "single"],
      // we want to force semicolons
      "semi": ["error", "always"],
      // we use 2 spaces to indent our code
      "indent": ["error", 4],
      // we want to avoid extraneous spaces
      "no-multi-spaces": ["error"],
      "camelcase": "error",
      "spaced-comment": "error",
      "no-duplicate-imports": "error",



      //TODO:  remove before push
      // disable no unused vars rule
      "no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars": "error",

     //TODO: test any un-comment any necessary
    // "node/exports-style": ["error", "module.exports"],
    //   "node/file-extension-in-import": ["error", "always"],
    //   "node/prefer-global/buffer": ["error", "always"],
    //   "node/prefer-global/console": ["error", "always"],
    //   "node/prefer-global/process": ["error", "always"],
    //   "node/prefer-global/url-search-params": ["error", "always"],
    //   "node/prefer-global/url": ["error", "always"],
    //   "node/prefer-promises/dns": "error",
    //   "node/prefer-promises/fs": "error"

    "spaced-comment": "error",
   
    "no-duplicate-imports": "error",
    "array-callback-return": "error",
    "constructor-super": "error",
    "for-direction": "error",
    "no-await-in-loop": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-const-assign": "error",
    "no-constant-binary-expression": "error",
    "no-constructor-return": "error",
    "no-control-regex": "error",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty-pattern": "off",
    "no-explicit-any": "0ff",
    "no-func-assign": "error",
    "no-irregular-whitespace": "error",
    "no-loss-of-precision": "error",
    "no-unreachable": "error",
    "no-unsafe-negation": "error",
    "no-unsafe-optional-chaining": "error",
    "no-useless-backreference": "error",

    // Suggestions 

    "arrow-body-style": ["error", "as-needed"],
    "block-scoped-var": "error",
    "camelcase": "error",
    "capitalized-comments": ["error", "always"] ,
    "class-methods-use-this": "error",
    "curly": "error",
    "default-case": "error",
    "default-case-last": "error",
    "dot-notation": "error",
    "multiline-comment-style": ["error", "bare-block"],
    "eslint no-console": "error",
    "no-eq-null": "error",
    "no-extra-semi": "error",
    "no-inline-comments": "error",
    "no-invalid-this": "error",
    "no-loop-func": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-useless-rename": "error",
    "no-var": "error",
    "yoda": "error",

    //Layout & Formatting 
    "array-bracket-newline": ["error", "never"],
    "array-bracket-spacing": ["error", "never"],
    "array-element-newline": ["error", "never"],
    "arrow-parens": ["error", "as-needed"],
    "arrow-spacing": ["error", { "before": false, "after": true }],
    "block-spacing": "error",
    "brace-style": ["error", "stroustrup"],
    "comma-spacing": ["error", { "before": false, "after": true }],
    "indent": ["error", 4],
    "no-multi-spaces": "error",
    "no-multiple-empty-lines": "error",
    // "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 0 }],
    "no-trailing-spaces": "error",
    "no-whitespace-before-property": "error",
    "object-curly-newline": ["error", { "minProperties": 2 }],
    "object-curly-spacing": ["error", "always"],
    "quotes": ["error", "single"],
    "semi": ["error", "always"],
    "semi-spacing": ["error", { "before": false, "after": true }],
    "switch-colon-spacing": ["error", {"after": false, "before": true}]

    },
    "settings": {
      "import/resolver": {
        "typescript": {}
      }
    }
    // "ignorePatterns": ["/**/*.test.ts"]
}